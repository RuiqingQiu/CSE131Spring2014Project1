// check of all cases in check#1

function : void foo() {
	int int_x = 1;
	int int_y = 2;
	int int_z;
	
	float float_a = 3.0;
	float float_b = 4.0;
	float float_c;
	
	bool bool_true = true;
	bool bool_false = false;
	
	// ok
	1 + 2 / 3 * 4 + 5;
	1 + 2.0 / 3 * 4.0 - 5.0;
	3 % 2;
	int_x % 2 % 2 % 2 % 2;
	int_y % int_x % 2 % 1 / 2;
	1 / 2 % 10;
	3 < 3.0;
	3 > 1;
	1 <= int_x;
	int_y >= int_x;
	1 == 1.0;
	2 == int_x;
	2.0 != 2.0;
	3 != float_a;
	true == true;
	false == false;
	true == false;
	true == bool_true;
	true && true;
	true || false;
	false || true;
	!true;
	!false;
	!bool_true;
	true && true || false || !true;
	(1 < 2) || (3 >= 2);
	((1 + 2) > 3) || true && !(3 <= 2);
	1 ^ 2 & 3 | 59 | int_x & 3;
	(1+2) | (6 ^ 2) & (1 * 10);
	
	// fail
	1 / 2.0 + true;
	1 * 2 / true;
	1 / true;
	true * false;
	int_x / bool_true;
	
	3 % 1.0;
	float_a % 2.0;
	float_b % true;
	float_a % int_x;
	(1 + 2) + 3 + 4 % 1.0;
	
	3 < 3 < 3; 
	1 < true;
	
	true == 1;
	2 == false;
	2.0 != false;
	true != 1;
	2 != false;
	
	2 && 1;
	2.0 && true;
	false || int_x;
	int_y || int_x;
	!1;
	!2.0;
	!int_x;
	
	true & 1;
	1.0 & 1;
	2.0 & 2;
	float_a | float_b;
	34 ^ 23 | true;
	int_x ^ 2.0;
	
	// total fails: 30
	
}