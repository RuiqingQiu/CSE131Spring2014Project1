int* x15;
int[5] y15;
int z15;

typedef int[5] ARR;

function : int* & foo15(int x) { return z15; }
function : ARR foo15c(int x) { return x15; }

structdef MYS1 {
	int x, y;
	int z;
};

structdef MYS2 {
	int x, y;
	int z;
};

MYS2 b15;
function : MYS1 foo15b(int x) { return b15; }

function : int main(){
 MYS1** ptr;
 int y;
 int w;
 y = (*ptr).x; 
 w = (**ptr)->x; // The arrow operator is basically the same as above 
 
 ARR* b;
 int[5] a;
 int[5] c;
 
 int* c15;
 float* e15 = c15;
  
 float* f15 = a;
 
 int* g15;
 int** h15 = g15;
 
 int** i15;
 int* j15 = i15;
 
 return 0;
 }
