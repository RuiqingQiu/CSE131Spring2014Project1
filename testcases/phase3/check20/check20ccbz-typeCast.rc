const bool x1 = true;
int y1;
float z1;
int[5] a1;

function : void main1()
{
	if( (int) z1 ) {}	// z1 is now an int, so no error
	
	if( (float) x1 ) {}	// x1 is now a float, so bool or int required for condition test, float found
	
	y1 = (int) a1;		// arrays cannot be type casted
	
	bool b1 = x1;		// type casts are only temporary, so x1 (bool) assignable to b1 (bool)
	
	int c1 = x1;		// type casts are only temporary, so x1 (bool) not assignable to c1 (int)
	
	y1 = a1[ (int) x1 ];	// x1 is now an int, so no error
}

typedef float FOO;
typedef FOO* FPTR;
typedef int* IPTR;
int x;
FOO y;
FPTR z;
int* intPtr;

function : int main2() {
x = (int) y;
x = (int) (x + 4.9);
y = (FOO) (int) (65.3);
intPtr = (IPTR) z;
return 0;
}