structdef CAT 
{
	int age;
	int height;
	int weight;
	
	function : int sleep(int days) { return days; }
	
	function : bool hungry() { return true; }
	function : int getWeight() { return this.weight; }
	
	function : void failMe() { 
			this.mom;		// error : reference field mom not found
			this.dad;		// error : reference field dad not found
			this.age;
			bool b = this.hungry();
			this.helpyou();	// error : reference field helpyou not found (cats are too lazy to help you)
		}

};

structdef OWNER
{
	CAT cat;
};

structdef OWNER2
{
	CAT cat;
};

function : void main()
{
	int time = 50;
	
	CAT cat;
	
	cat.age;
	cat.height;
	cat.weight;
	
	cat.sleep(10);
	cat.sleep(time);
	cat.sleep(true);	// error : bool not assignable
	cat.hungry();
	
	sleep(10); // error : not declared
	time.age; // error : non struct type
	
	OWNER o;
	OWNER2 o2;
	
	o = o2;	// error : OWNER2 not assignable to OWNER
	
	typedef OWNER SALLY;
	
	SALLY sally;
	sally = o;
	sally = o2;	// error : OWNER2 not assignable to OWNER
	
	typedef SALLY JOHN;
	JOHN john;
	john = o;
	john = sally;
	
	typedef JOHN JIM;
	
	JIM jim;
	jim = o;
	o = jim;
	jim = o2; // error : OWNER2 not assignable to JIM

}

// no more errors
structdef LINKEDLIST {
	LINKEDLIST * next;
	int data;
};

function : void main2() {
	LINKEDLIST * first;
	new first;
	first->data = 55;
	new first->next;
	first->next->data = 44;
	first->next->next = first;
}

extern function : int foo10();

function : int foo10() { }


int dantsunekawa;
// errors : 11
