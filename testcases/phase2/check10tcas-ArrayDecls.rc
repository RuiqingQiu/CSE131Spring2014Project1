function: int foo () { return 1; }

function: void main() {
  int i;
  float f;
  bool b;
  
  const int ci = -1;
  const float cf = 2.0;
  const bool cb = true;
  
  int[1] intArray;     // index is not equivalent to an int
  int[f] blahFArray;   
  int[1.2 + 5] floatArray; 
  int[1.2] floatArray; 
  int[cf] blahCFBrray; 
  int[b] blahBrray;    
  int[cb] blahCBrray;  
  int[true] boolTArray;
  int[false] boolFArray;
  int[true || false] boolToFArray;
  int[false && true] boolFoTArray;
    
  int[i] unknownSizeArray;     // index is not known at compile time
  int[8-i] unknownSizeArray2; 


  int[-1] negativeSizeArray; //negative sized array
  int[-5 + 1] negArray1; 
  
  /* Throwing only one error */
  
  int[-i] negVarArray;         // value of index not known at compile time
  int[1.2 + true] FpBArray;    // numeric expected
  int[1 / 0] arithErrArray;    // arithmetic error
  int[foo()] fooFuncArray;     // value of index not known at compile time
}

