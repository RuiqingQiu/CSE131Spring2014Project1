structdef MYSTRUCT{
	int a,b;
};
structdef MYS{
  MYSTRUCT b;
  //Error,Size of field m cannot be determined at compile time.
  MYS[2] m;  
  MYS* mys;
};
typedef int* INTPTR;
typedef MYS* MYSPTR;

structdef MYS2{
  INTPTR[10] x;
  MYSPTR[10] b;
};

typedef float[10] ARR;
function: void main(){

  int **x;
  x[1][2] = 5;//dereference unwraps a level of pointer
  
  int[4] a;
  int*s = a;
  /********  NEED TO BE FIXED ***********/
  int** t = a;  //This should be an error, but now passing
  
  typedef int[4] YARR;
  YARR[2] b;
  int** c = b;  //This also fail, but do not know why
  int* test = b[1];
  
  ARR[2] c; // c should have float[10][2]
  int* test1;  
  test1 = &c; // Error
  test1 = &c[1]; // Error
  int test2 = c[1][9];
}