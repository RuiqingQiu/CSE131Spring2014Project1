function: void foo(){}
static funcptr : void()fp3332 = foo;
funcptr: void() fp1 = foo;
funcptr : void(int x) fp2 = nullptr; 
function: void main(){
  new fp2;     //Error: Operand to "new" is not a modifiable L-value.
  delete fp2;  //Error: Operand to "new" is not a modifiable L-value.
  
  new nullptr;    //Error: Operand to "new" is not a modifiable L-value.
  delete nullptr; //Error: Operand to "new" is not a modifiable L-value.
  
  bool test1;
  int test3;
  test1 = fp1 == nullptr;
  test1 = fp1 != nullptr;
  test1 = fp1 == fp2;
  test1 = fp1 != fp2;
  
  
  int*test2 = (int*)nullptr;
  
  int* test4;
  test4 = nullptr;
  *test4;
  
  //Error,Incompatible type nullptr to unary dereference operator *, pointer expected.
  *nullptr; 
}