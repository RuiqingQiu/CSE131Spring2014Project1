
//----------------------------------------------------
// The following code was generated by CUP v0.10k TUM Edition 20050516
// Sat Apr 05 16:18:15 PDT 2014
//----------------------------------------------------

import java_cup.runtime.*;
import java.util.Vector;

/** CUP v0.10k TUM Edition 20050516 generated parser.
  * @version Sat Apr 05 16:18:15 PDT 2014
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\253\000\002\111\002\000\002\003\004\000\002\002" +
    "\004\000\002\004\003\000\002\004\002\000\002\005\003" +
    "\000\002\005\004\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\011\006\000\002\012\006\000\002\012" +
    "\010\000\002\013\007\000\002\013\011\000\002\014\003" +
    "\000\002\014\002\000\002\015\006\000\002\112\002\000" +
    "\002\015\011\000\002\017\003\000\002\017\004\000\002" +
    "\020\005\000\002\113\002\000\002\114\002\000\002\007" +
    "\017\000\002\115\002\000\002\116\002\000\002\010\015" +
    "\000\002\100\004\000\002\100\011\000\002\101\003\000" +
    "\002\101\011\000\002\077\003\000\002\077\003\000\002" +
    "\076\003\000\002\076\003\000\002\076\003\000\002\076" +
    "\003\000\002\050\003\000\002\050\005\000\002\050\002" +
    "\000\002\053\003\000\002\053\002\000\002\051\003\000" +
    "\002\051\004\000\002\052\003\000\002\102\004\000\002" +
    "\102\003\000\002\117\002\000\002\120\002\000\002\024" +
    "\007\000\002\021\003\000\002\021\002\000\002\022\003" +
    "\000\002\022\004\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\023\004\000\002" +
    "\023\003\000\002\023\003\000\002\023\003\000\002\023" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\107\003\000\002\107\002\000" +
    "\002\110\003\000\002\110\005\000\002\057\005\000\002" +
    "\016\003\000\002\016\002\000\002\103\004\000\002\103" +
    "\006\000\002\104\003\000\002\104\005\000\002\105\005" +
    "\000\002\105\007\000\002\106\006\000\002\106\010\000" +
    "\002\046\004\000\002\046\006\000\002\046\002\000\002" +
    "\047\003\000\002\047\005\000\002\026\006\000\002\027" +
    "\004\000\002\027\002\000\002\030\005\000\002\031\004" +
    "\000\002\032\004\000\002\033\007\000\002\034\004\000" +
    "\002\034\005\000\002\035\006\000\002\036\006\000\002" +
    "\037\003\000\002\037\005\000\002\040\003\000\002\040" +
    "\003\000\002\041\003\000\002\025\003\000\002\025\002" +
    "\000\002\042\003\000\002\042\005\000\002\060\005\000" +
    "\002\060\003\000\002\061\005\000\002\061\003\000\002" +
    "\062\005\000\002\062\003\000\002\063\005\000\002\063" +
    "\003\000\002\064\005\000\002\064\003\000\002\065\005" +
    "\000\002\065\003\000\002\066\005\000\002\066\003\000" +
    "\002\067\005\000\002\067\003\000\002\070\005\000\002" +
    "\070\003\000\002\071\005\000\002\071\003\000\002\044" +
    "\003\000\002\044\003\000\002\045\003\000\002\045\003" +
    "\000\002\045\003\000\002\045\003\000\002\054\003\000" +
    "\002\054\003\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\056\003\000\002\056\003\000\002\072" +
    "\004\000\002\072\004\000\002\072\004\000\002\072\004" +
    "\000\002\072\006\000\002\072\006\000\002\072\006\000" +
    "\002\072\004\000\002\072\003\000\002\073\005\000\002" +
    "\073\006\000\002\073\005\000\002\073\004\000\002\073" +
    "\006\000\002\073\003\000\002\074\005\000\002\074\003" +
    "\000\002\074\003\000\002\074\003\000\002\074\003\000" +
    "\002\074\003\000\002\074\003\000\002\074\003\000\002" +
    "\074\004\000\002\074\003\000\002\075\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u012e\000\036\002\001\011\001\014\001\021\001\031" +
    "\001\033\001\034\001\035\001\041\001\072\001\073\001" +
    "\075\001\100\001\105\001\001\002\000\004\002\u0130\001" +
    "\002\000\036\002\ufffd\011\uffee\014\uffee\021\uffee\031\007" +
    "\033\uffee\034\uffee\035\010\041\uffee\072\014\073\011\075" +
    "\024\100\uffee\105\uffee\001\002\000\036\002\ufff6\011\ufff6" +
    "\014\ufff6\021\ufff6\031\ufff6\033\ufff6\034\ufff6\035\ufff6\041" +
    "\ufff6\072\ufff6\073\ufff6\075\ufff6\100\ufff6\105\ufff6\001\002" +
    "\000\020\011\034\014\031\033\035\034\240\035\u0124\041" +
    "\036\105\032\001\002\000\004\016\336\001\002\000\004" +
    "\105\316\001\002\000\022\011\034\014\031\021\241\033" +
    "\035\034\240\041\036\100\237\105\032\001\002\000\036" +
    "\002\ufff9\011\ufff9\014\ufff9\021\ufff9\031\ufff9\033\ufff9\034" +
    "\ufff9\035\ufff9\041\ufff9\072\ufff9\073\ufff9\075\ufff9\100\ufff9" +
    "\105\ufff9\001\002\000\022\011\uffef\014\uffef\021\uffef\033" +
    "\uffef\034\uffef\041\uffef\100\uffef\105\uffef\001\002\000\036" +
    "\002\ufffc\011\ufffc\014\ufffc\021\ufffc\031\ufffc\033\ufffc\034" +
    "\ufffc\035\ufffc\041\ufffc\072\ufffc\073\ufffc\075\ufffc\100\ufffc" +
    "\105\ufffc\001\002\000\036\002\ufff7\011\ufff7\014\ufff7\021" +
    "\ufff7\031\ufff7\033\ufff7\034\ufff7\035\ufff7\041\ufff7\072\ufff7" +
    "\073\ufff7\075\ufff7\100\ufff7\105\ufff7\001\002\000\036\002" +
    "\ufff5\011\ufff5\014\ufff5\021\ufff5\031\ufff5\033\ufff5\034\ufff5" +
    "\035\ufff5\041\ufff5\072\ufff5\073\ufff5\075\ufff5\100\ufff5\105" +
    "\ufff5\001\002\000\036\002\ufffe\011\uffee\014\uffee\021\uffee" +
    "\031\007\033\uffee\034\uffee\035\010\041\uffee\072\014\073" +
    "\011\075\024\100\uffee\105\uffee\001\002\000\036\002\ufffa" +
    "\011\ufffa\014\ufffa\021\ufffa\031\ufffa\033\ufffa\034\ufffa\035" +
    "\ufffa\041\ufffa\072\ufffa\073\ufffa\075\ufffa\100\ufffa\105\ufffa" +
    "\001\002\000\004\002\000\001\002\000\036\002\ufff8\011" +
    "\ufff8\014\ufff8\021\ufff8\031\ufff8\033\ufff8\034\ufff8\035\ufff8" +
    "\041\ufff8\072\ufff8\073\ufff8\075\ufff8\100\ufff8\105\ufff8\001" +
    "\002\000\016\011\034\014\031\033\035\034\033\041\036" +
    "\105\032\001\002\000\004\105\227\001\002\000\020\004" +
    "\uffdd\044\uffdd\045\uffdd\065\uffdd\071\uffdd\105\uffdd\106\uffdd" +
    "\001\002\000\020\004\uffdc\044\uffdc\045\uffdc\065\uffdc\071" +
    "\uffdc\105\uffdc\106\uffdc\001\002\000\016\004\uffd5\044\064" +
    "\065\uffd5\071\060\105\uffd5\106\uffd5\001\002\000\020\004" +
    "\uffd8\044\uffd8\045\uffd8\065\uffd8\071\uffd8\105\uffd8\106\uffd8" +
    "\001\002\000\020\004\uff57\044\uff57\045\uff57\065\uff57\071" +
    "\uff57\105\uff57\106\uff57\001\002\000\004\016\037\001\002" +
    "\000\020\004\uffd9\044\uffd9\045\uffd9\065\uffd9\071\uffd9\105" +
    "\uffd9\106\uffd9\001\002\000\020\004\uffda\044\uffda\045\uffda" +
    "\065\uffda\071\uffda\105\uffda\106\uffda\001\002\000\020\004" +
    "\uffdb\044\uffdb\045\uffdb\065\uffdb\071\uffdb\105\uffdb\106\uffdb" +
    "\001\002\000\016\011\034\014\031\033\035\041\036\077" +
    "\042\105\032\001\002\000\012\004\uffd3\045\uffd3\071\060" +
    "\106\uffd3\001\002\000\006\004\043\045\uffb3\001\002\000" +
    "\010\004\uffce\045\uffce\106\uffce\001\002\000\006\045\uffb4" +
    "\106\uffb4\001\002\000\004\045\045\001\002\000\020\011" +
    "\034\014\031\033\035\034\033\041\036\065\uffb8\105\032" +
    "\001\002\000\006\004\043\106\uffb3\001\002\000\006\020" +
    "\053\065\uffb9\001\002\000\006\020\uffb7\065\uffb7\001\002" +
    "\000\004\065\052\001\002\000\012\004\uffe0\065\uffe0\105" +
    "\uffe0\106\uffe0\001\002\000\016\011\034\014\031\033\035" +
    "\034\033\041\036\105\032\001\002\000\006\020\uffb6\065" +
    "\uffb6\001\002\000\004\106\056\001\002\000\006\020\uffb5" +
    "\065\uffb5\001\002\000\010\004\uffcf\045\uffcf\106\uffcf\001" +
    "\002\000\016\004\uffd0\045\uffd0\065\uffd0\071\uffd0\105\uffd0" +
    "\106\uffd0\001\002\000\012\004\uffd4\045\uffd4\071\060\106" +
    "\uffd4\001\002\000\016\004\uffd2\045\uffd2\065\uffd2\071\uffd2" +
    "\105\uffd2\106\uffd2\001\002\000\016\004\uffd1\045\uffd1\065" +
    "\uffd1\071\uffd1\105\uffd1\106\uffd1\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\012\004\uffe1\065\uffe1\105" +
    "\uffe1\106\uffe1\001\002\000\014\004\uffd7\065\uffd7\071\060" +
    "\105\uffd7\106\uffd7\001\002\000\062\004\uff7e\005\uff7e\007" +
    "\225\010\uff7e\013\uff7e\020\uff7e\027\uff7e\036\uff7e\037\uff7e" +
    "\043\uff7e\046\uff7e\047\uff7e\050\uff7e\052\uff7e\053\uff7e\056" +
    "\uff7e\057\uff7e\060\uff7e\062\uff7e\063\uff7e\065\uff7e\066\uff7e" +
    "\070\uff7e\071\uff7e\001\002\000\060\004\uff80\005\uff80\010" +
    "\uff80\013\uff80\020\uff80\027\uff80\036\uff80\037\uff80\043\uff80" +
    "\046\uff80\047\uff80\050\uff80\052\200\053\uff80\056\uff80\057" +
    "\uff80\060\uff80\062\uff80\063\uff80\065\uff80\066\uff80\070\202" +
    "\071\201\001\002\000\052\004\uff82\005\uff82\010\uff82\013" +
    "\uff82\020\uff82\027\uff82\036\uff82\037\uff82\043\uff82\046\uff82" +
    "\047\uff82\050\175\053\uff82\056\uff82\057\uff82\060\174\062" +
    "\uff82\063\uff82\065\uff82\066\uff82\001\002\000\046\004\uff84" +
    "\005\uff84\010\uff84\013\uff84\020\uff84\027\uff84\036\172\037" +
    "\166\043\uff84\046\170\047\167\053\uff84\056\uff84\057\uff84" +
    "\062\uff84\063\uff84\065\uff84\066\uff84\001\002\000\076\004" +
    "\uff5d\005\uff5d\006\uff5d\007\uff5d\010\uff5d\013\uff5d\020\uff5d" +
    "\024\uff5d\027\uff5d\036\uff5d\037\uff5d\043\uff5d\044\uff5d\045" +
    "\uff5d\046\uff5d\047\uff5d\050\uff5d\051\uff5d\052\uff5d\053\uff5d" +
    "\056\uff5d\057\uff5d\060\uff5d\061\uff5d\062\uff5d\063\uff5d\065" +
    "\uff5d\066\uff5d\070\uff5d\071\uff5d\001\002\000\076\004\uff62" +
    "\005\uff62\006\uff62\007\uff62\010\uff62\013\uff62\020\uff62\024" +
    "\uff62\027\uff62\036\uff62\037\uff62\043\uff62\044\uff62\045\uff62" +
    "\046\uff62\047\uff62\050\uff62\051\uff62\052\uff62\053\uff62\056" +
    "\uff62\057\uff62\060\uff62\061\uff62\062\uff62\063\uff62\065\uff62" +
    "\066\uff62\070\uff62\071\uff62\001\002\000\036\004\uff86\005" +
    "\uff86\010\uff86\013\uff86\020\uff86\027\164\043\uff86\053\163" +
    "\056\uff86\057\uff86\062\uff86\063\uff86\065\uff86\066\uff86\001" +
    "\002\000\032\004\160\005\uff88\010\uff88\013\uff88\020\uff88" +
    "\043\uff88\056\uff88\057\uff88\062\uff88\063\uff88\065\uff88\066" +
    "\uff88\001\002\000\076\004\uff68\005\uff68\006\212\007\uff68" +
    "\010\uff68\013\uff68\020\uff68\024\211\027\uff68\036\uff68\037" +
    "\uff68\043\uff68\044\206\045\207\046\uff68\047\uff68\050\uff68" +
    "\051\121\052\uff68\053\uff68\056\uff68\057\uff68\060\uff68\061" +
    "\111\062\uff68\063\uff68\065\uff68\066\uff68\070\uff68\071\uff68" +
    "\001\002\000\004\063\205\001\002\000\076\004\uff5c\005" +
    "\uff5c\006\uff5c\007\uff5c\010\uff5c\013\uff5c\020\uff5c\024\uff5c" +
    "\027\uff5c\036\uff5c\037\uff5c\043\uff5c\044\uff5c\045\uff5c\046" +
    "\uff5c\047\uff5c\050\uff5c\051\uff5c\052\uff5c\053\uff5c\056\uff5c" +
    "\057\uff5c\060\uff5c\061\uff5c\062\uff5c\063\uff5c\065\uff5c\066" +
    "\uff5c\070\uff5c\071\uff5c\001\002\000\030\005\uff8a\010\uff8a" +
    "\013\156\020\uff8a\043\uff8a\056\uff8a\057\uff8a\062\uff8a\063" +
    "\uff8a\065\uff8a\066\uff8a\001\002\000\026\005\uff8c\010\154" +
    "\020\uff8c\043\uff8c\056\uff8c\057\uff8c\062\uff8c\063\uff8c\065" +
    "\uff8c\066\uff8c\001\002\000\024\005\152\020\uff8e\043\uff8e" +
    "\056\uff8e\057\uff8e\062\uff8e\063\uff8e\065\uff8e\066\uff8e\001" +
    "\002\000\022\020\uff90\043\uff90\056\147\057\uff90\062\uff90" +
    "\063\uff90\065\uff90\066\uff90\001\002\000\076\004\uff5e\005" +
    "\uff5e\006\uff5e\007\uff5e\010\uff5e\013\uff5e\020\uff5e\024\uff5e" +
    "\027\uff5e\036\uff5e\037\uff5e\043\uff5e\044\uff5e\045\uff5e\046" +
    "\uff5e\047\uff5e\050\uff5e\051\uff5e\052\uff5e\053\uff5e\056\uff5e" +
    "\057\uff5e\060\uff5e\061\uff5e\062\uff5e\063\uff5e\065\uff5e\066" +
    "\uff5e\070\uff5e\071\uff5e\001\002\000\042\004\116\017\125" +
    "\032\112\045\120\051\121\054\107\055\124\061\111\067" +
    "\114\071\126\074\101\101\106\102\123\103\110\104\073" +
    "\106\115\001\002\000\076\004\uff60\005\uff60\006\uff60\007" +
    "\uff60\010\uff60\013\uff60\020\uff60\024\uff60\027\uff60\036\uff60" +
    "\037\uff60\043\uff60\044\uff60\045\uff60\046\uff60\047\uff60\050" +
    "\uff60\051\uff60\052\uff60\053\uff60\056\uff60\057\uff60\060\uff60" +
    "\061\uff60\062\uff60\063\uff60\065\uff60\066\uff60\070\uff60\071" +
    "\uff60\001\002\000\124\004\uff72\005\uff72\006\uff72\007\uff72" +
    "\010\uff72\013\uff72\017\uff72\020\uff72\024\uff72\027\uff72\032" +
    "\uff72\036\uff72\037\uff72\043\uff72\044\uff72\045\uff72\046\uff72" +
    "\047\uff72\050\uff72\051\uff72\052\uff72\053\uff72\054\uff72\055" +
    "\uff72\056\uff72\057\uff72\060\uff72\061\uff72\062\uff72\063\uff72" +
    "\065\uff72\066\uff72\067\uff72\070\uff72\071\uff72\074\uff72\101" +
    "\uff72\102\uff72\103\uff72\104\uff72\106\uff72\001\002\000\076" +
    "\004\uff5b\005\uff5b\006\uff5b\007\uff5b\010\uff5b\013\uff5b\020" +
    "\uff5b\024\uff5b\027\uff5b\036\uff5b\037\uff5b\043\uff5b\044\uff5b" +
    "\045\uff5b\046\uff5b\047\uff5b\050\uff5b\051\uff5b\052\uff5b\053" +
    "\uff5b\056\uff5b\057\uff5b\060\uff5b\061\uff5b\062\uff5b\063\uff5b" +
    "\065\uff5b\066\uff5b\070\uff5b\071\uff5b\001\002\000\010\020" +
    "\uff96\063\uff96\066\uff96\001\002\000\004\045\141\001\002" +
    "\000\076\004\uff58\005\uff58\006\uff58\007\uff58\010\uff58\013" +
    "\uff58\020\uff58\024\uff58\027\uff58\036\uff58\037\uff58\043\uff58" +
    "\044\uff58\045\uff58\046\uff58\047\uff58\050\uff58\051\uff58\052" +
    "\uff58\053\uff58\056\uff58\057\uff58\060\uff58\061\uff58\062\uff58" +
    "\063\uff58\065\uff58\066\uff58\070\uff58\071\uff58\001\002\000" +
    "\042\004\116\017\125\032\112\045\120\051\121\054\107" +
    "\055\124\061\111\067\114\071\126\074\101\101\106\102" +
    "\123\103\110\104\073\106\115\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\056\004\116\011\034\014" +
    "\031\017\125\032\112\033\035\034\033\041\036\045\120" +
    "\051\121\054\107\055\124\061\111\067\114\071\126\074" +
    "\101\101\106\102\123\103\110\104\073\105\032\106\115" +
    "\001\002\000\124\004\uff71\005\uff71\006\uff71\007\uff71\010" +
    "\uff71\013\uff71\017\uff71\020\uff71\024\uff71\027\uff71\032\uff71" +
    "\036\uff71\037\uff71\043\uff71\044\uff71\045\uff71\046\uff71\047" +
    "\uff71\050\uff71\051\uff71\052\uff71\053\uff71\054\uff71\055\uff71" +
    "\056\uff71\057\uff71\060\uff71\061\uff71\062\uff71\063\uff71\065" +
    "\uff71\066\uff71\067\uff71\070\uff71\071\uff71\074\uff71\101\uff71" +
    "\102\uff71\103\uff71\104\uff71\106\uff71\001\002\000\042\004" +
    "\116\017\125\032\112\045\120\051\121\054\107\055\124" +
    "\061\111\067\114\071\126\074\101\101\106\102\123\103" +
    "\110\104\073\106\115\001\002\000\076\004\uff5f\005\uff5f" +
    "\006\uff5f\007\uff5f\010\uff5f\013\uff5f\020\uff5f\024\uff5f\027" +
    "\uff5f\036\uff5f\037\uff5f\043\uff5f\044\uff5f\045\uff5f\046\uff5f" +
    "\047\uff5f\050\uff5f\051\uff5f\052\uff5f\053\uff5f\056\uff5f\057" +
    "\uff5f\060\uff5f\061\uff5f\062\uff5f\063\uff5f\065\uff5f\066\uff5f" +
    "\070\uff5f\071\uff5f\001\002\000\076\004\uff5a\005\uff5a\006" +
    "\uff5a\007\uff5a\010\uff5a\013\uff5a\020\uff5a\024\uff5a\027\uff5a" +
    "\036\uff5a\037\uff5a\043\uff5a\044\uff5a\045\uff5a\046\uff5a\047" +
    "\uff5a\050\uff5a\051\uff5a\052\uff5a\053\uff5a\056\uff5a\057\uff5a" +
    "\060\uff5a\061\uff5a\062\uff5a\063\uff5a\065\uff5a\066\uff5a\070" +
    "\uff5a\071\uff5a\001\002\000\004\106\130\001\002\000\042" +
    "\004\116\017\125\032\112\045\120\051\121\054\107\055" +
    "\124\061\111\067\114\071\126\074\101\101\106\102\123" +
    "\103\110\104\073\106\115\001\002\000\062\004\uff70\005" +
    "\uff70\007\uff70\010\uff70\013\uff70\020\uff70\027\uff70\036\uff70" +
    "\037\uff70\043\uff70\046\uff70\047\uff70\050\uff70\052\uff70\053" +
    "\uff70\056\uff70\057\uff70\060\uff70\062\uff70\063\uff70\065\uff70" +
    "\066\uff70\070\uff70\071\uff70\001\002\000\076\004\uff59\005" +
    "\uff59\006\uff59\007\uff59\010\uff59\013\uff59\020\uff59\024\uff59" +
    "\027\uff59\036\uff59\037\uff59\043\uff59\044\uff59\045\uff59\046" +
    "\uff59\047\uff59\050\uff59\051\uff59\052\uff59\053\uff59\056\uff59" +
    "\057\uff59\060\uff59\061\uff59\062\uff59\063\uff59\065\uff59\066" +
    "\uff59\070\uff59\071\uff59\001\002\000\062\004\uff6e\005\uff6e" +
    "\007\uff6e\010\uff6e\013\uff6e\020\uff6e\027\uff6e\036\uff6e\037" +
    "\uff6e\043\uff6e\046\uff6e\047\uff6e\050\uff6e\052\uff6e\053\uff6e" +
    "\056\uff6e\057\uff6e\060\uff6e\062\uff6e\063\uff6e\065\uff6e\066" +
    "\uff6e\070\uff6e\071\uff6e\001\002\000\004\065\136\001\002" +
    "\000\004\065\134\001\002\000\042\004\116\017\125\032" +
    "\112\045\120\051\121\054\107\055\124\061\111\067\114" +
    "\071\126\074\101\101\106\102\123\103\110\104\073\106" +
    "\115\001\002\000\062\004\uff6a\005\uff6a\007\uff6a\010\uff6a" +
    "\013\uff6a\020\uff6a\027\uff6a\036\uff6a\037\uff6a\043\uff6a\046" +
    "\uff6a\047\uff6a\050\uff6a\052\uff6a\053\uff6a\056\uff6a\057\uff6a" +
    "\060\uff6a\062\uff6a\063\uff6a\065\uff6a\066\uff6a\070\uff6a\071" +
    "\uff6a\001\002\000\076\004\uff61\005\uff61\006\uff61\007\uff61" +
    "\010\uff61\013\uff61\020\uff61\024\uff61\027\uff61\036\uff61\037" +
    "\uff61\043\uff61\044\uff61\045\uff61\046\uff61\047\uff61\050\uff61" +
    "\051\uff61\052\uff61\053\uff61\056\uff61\057\uff61\060\uff61\061" +
    "\uff61\062\uff61\063\uff61\065\uff61\066\uff61\070\uff61\071\uff61" +
    "\001\002\000\062\004\uff69\005\uff69\007\uff69\010\uff69\013" +
    "\uff69\020\uff69\027\uff69\036\uff69\037\uff69\043\uff69\046\uff69" +
    "\047\uff69\050\uff69\052\uff69\053\uff69\056\uff69\057\uff69\060" +
    "\uff69\062\uff69\063\uff69\065\uff69\066\uff69\070\uff69\071\uff69" +
    "\001\002\000\062\004\uff6f\005\uff6f\007\uff6f\010\uff6f\013" +
    "\uff6f\020\uff6f\027\uff6f\036\uff6f\037\uff6f\043\uff6f\046\uff6f" +
    "\047\uff6f\050\uff6f\052\uff6f\053\uff6f\056\uff6f\057\uff6f\060" +
    "\uff6f\062\uff6f\063\uff6f\065\uff6f\066\uff6f\070\uff6f\071\uff6f" +
    "\001\002\000\056\004\116\011\034\014\031\017\125\032" +
    "\112\033\035\034\033\041\036\045\120\051\121\054\107" +
    "\055\124\061\111\067\114\071\126\074\101\101\106\102" +
    "\123\103\110\104\073\105\032\106\115\001\002\000\004" +
    "\065\145\001\002\000\004\065\144\001\002\000\062\004" +
    "\uff6b\005\uff6b\007\uff6b\010\uff6b\013\uff6b\020\uff6b\027\uff6b" +
    "\036\uff6b\037\uff6b\043\uff6b\046\uff6b\047\uff6b\050\uff6b\052" +
    "\uff6b\053\uff6b\056\uff6b\057\uff6b\060\uff6b\062\uff6b\063\uff6b" +
    "\065\uff6b\066\uff6b\070\uff6b\071\uff6b\001\002\000\062\004" +
    "\uff6c\005\uff6c\007\uff6c\010\uff6c\013\uff6c\020\uff6c\027\uff6c" +
    "\036\uff6c\037\uff6c\043\uff6c\046\uff6c\047\uff6c\050\uff6c\052" +
    "\uff6c\053\uff6c\056\uff6c\057\uff6c\060\uff6c\062\uff6c\063\uff6c" +
    "\065\uff6c\066\uff6c\070\uff6c\071\uff6c\001\002\000\062\004" +
    "\uff6d\005\uff6d\007\uff6d\010\uff6d\013\uff6d\020\uff6d\027\uff6d" +
    "\036\uff6d\037\uff6d\043\uff6d\046\uff6d\047\uff6d\050\uff6d\052" +
    "\uff6d\053\uff6d\056\uff6d\057\uff6d\060\uff6d\062\uff6d\063\uff6d" +
    "\065\uff6d\066\uff6d\070\uff6d\071\uff6d\001\002\000\042\004" +
    "\116\017\125\032\112\045\120\051\121\054\107\055\124" +
    "\061\111\067\114\071\126\074\101\101\106\102\123\103" +
    "\110\104\073\106\115\001\002\000\060\004\uff7e\005\uff7e" +
    "\010\uff7e\013\uff7e\020\uff7e\027\uff7e\036\uff7e\037\uff7e\043" +
    "\uff7e\046\uff7e\047\uff7e\050\uff7e\052\uff7e\053\uff7e\056\uff7e" +
    "\057\uff7e\060\uff7e\062\uff7e\063\uff7e\065\uff7e\066\uff7e\070" +
    "\uff7e\071\uff7e\001\002\000\024\005\152\020\uff8f\043\uff8f" +
    "\056\uff8f\057\uff8f\062\uff8f\063\uff8f\065\uff8f\066\uff8f\001" +
    "\002\000\042\004\116\017\125\032\112\045\120\051\121" +
    "\054\107\055\124\061\111\067\114\071\126\074\101\101" +
    "\106\102\123\103\110\104\073\106\115\001\002\000\026" +
    "\005\uff8d\010\154\020\uff8d\043\uff8d\056\uff8d\057\uff8d\062" +
    "\uff8d\063\uff8d\065\uff8d\066\uff8d\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\030\005\uff8b\010\uff8b\013" +
    "\156\020\uff8b\043\uff8b\056\uff8b\057\uff8b\062\uff8b\063\uff8b" +
    "\065\uff8b\066\uff8b\001\002\000\042\004\116\017\125\032" +
    "\112\045\120\051\121\054\107\055\124\061\111\067\114" +
    "\071\126\074\101\101\106\102\123\103\110\104\073\106" +
    "\115\001\002\000\032\004\160\005\uff89\010\uff89\013\uff89" +
    "\020\uff89\043\uff89\056\uff89\057\uff89\062\uff89\063\uff89\065" +
    "\uff89\066\uff89\001\002\000\042\004\116\017\125\032\112" +
    "\045\120\051\121\054\107\055\124\061\111\067\114\071" +
    "\126\074\101\101\106\102\123\103\110\104\073\106\115" +
    "\001\002\000\036\004\uff87\005\uff87\010\uff87\013\uff87\020" +
    "\uff87\027\164\043\uff87\053\163\056\uff87\057\uff87\062\uff87" +
    "\063\uff87\065\uff87\066\uff87\001\002\000\042\004\116\017" +
    "\125\032\112\045\120\051\121\054\107\055\124\061\111" +
    "\067\114\071\126\074\101\101\106\102\123\103\110\104" +
    "\073\106\115\001\002\000\042\004\uff7c\017\uff7c\032\uff7c" +
    "\045\uff7c\051\uff7c\054\uff7c\055\uff7c\061\uff7c\067\uff7c\071" +
    "\uff7c\074\uff7c\101\uff7c\102\uff7c\103\uff7c\104\uff7c\106\uff7c" +
    "\001\002\000\042\004\uff7d\017\uff7d\032\uff7d\045\uff7d\051" +
    "\uff7d\054\uff7d\055\uff7d\061\uff7d\067\uff7d\071\uff7d\074\uff7d" +
    "\101\uff7d\102\uff7d\103\uff7d\104\uff7d\106\uff7d\001\002\000" +
    "\046\004\uff85\005\uff85\010\uff85\013\uff85\020\uff85\027\uff85" +
    "\036\172\037\166\043\uff85\046\170\047\167\053\uff85\056" +
    "\uff85\057\uff85\062\uff85\063\uff85\065\uff85\066\uff85\001\002" +
    "\000\042\004\uff78\017\uff78\032\uff78\045\uff78\051\uff78\054" +
    "\uff78\055\uff78\061\uff78\067\uff78\071\uff78\074\uff78\101\uff78" +
    "\102\uff78\103\uff78\104\uff78\106\uff78\001\002\000\042\004" +
    "\uff79\017\uff79\032\uff79\045\uff79\051\uff79\054\uff79\055\uff79" +
    "\061\uff79\067\uff79\071\uff79\074\uff79\101\uff79\102\uff79\103" +
    "\uff79\104\uff79\106\uff79\001\002\000\042\004\uff7b\017\uff7b" +
    "\032\uff7b\045\uff7b\051\uff7b\054\uff7b\055\uff7b\061\uff7b\067" +
    "\uff7b\071\uff7b\074\uff7b\101\uff7b\102\uff7b\103\uff7b\104\uff7b" +
    "\106\uff7b\001\002\000\042\004\116\017\125\032\112\045" +
    "\120\051\121\054\107\055\124\061\111\067\114\071\126" +
    "\074\101\101\106\102\123\103\110\104\073\106\115\001" +
    "\002\000\042\004\uff7a\017\uff7a\032\uff7a\045\uff7a\051\uff7a" +
    "\054\uff7a\055\uff7a\061\uff7a\067\uff7a\071\uff7a\074\uff7a\101" +
    "\uff7a\102\uff7a\103\uff7a\104\uff7a\106\uff7a\001\002\000\052" +
    "\004\uff83\005\uff83\010\uff83\013\uff83\020\uff83\027\uff83\036" +
    "\uff83\037\uff83\043\uff83\046\uff83\047\uff83\050\175\053\uff83" +
    "\056\uff83\057\uff83\060\174\062\uff83\063\uff83\065\uff83\066" +
    "\uff83\001\002\000\042\004\uff77\017\uff77\032\uff77\045\uff77" +
    "\051\uff77\054\uff77\055\uff77\061\uff77\067\uff77\071\uff77\074" +
    "\uff77\101\uff77\102\uff77\103\uff77\104\uff77\106\uff77\001\002" +
    "\000\042\004\uff76\017\uff76\032\uff76\045\uff76\051\uff76\054" +
    "\uff76\055\uff76\061\uff76\067\uff76\071\uff76\074\uff76\101\uff76" +
    "\102\uff76\103\uff76\104\uff76\106\uff76\001\002\000\042\004" +
    "\116\017\125\032\112\045\120\051\121\054\107\055\124" +
    "\061\111\067\114\071\126\074\101\101\106\102\123\103" +
    "\110\104\073\106\115\001\002\000\060\004\uff81\005\uff81" +
    "\010\uff81\013\uff81\020\uff81\027\uff81\036\uff81\037\uff81\043" +
    "\uff81\046\uff81\047\uff81\050\uff81\052\200\053\uff81\056\uff81" +
    "\057\uff81\060\uff81\062\uff81\063\uff81\065\uff81\066\uff81\070" +
    "\202\071\201\001\002\000\042\004\uff73\017\uff73\032\uff73" +
    "\045\uff73\051\uff73\054\uff73\055\uff73\061\uff73\067\uff73\071" +
    "\uff73\074\uff73\101\uff73\102\uff73\103\uff73\104\uff73\106\uff73" +
    "\001\002\000\042\004\uff75\017\uff75\032\uff75\045\uff75\051" +
    "\uff75\054\uff75\055\uff75\061\uff75\067\uff75\071\uff75\074\uff75" +
    "\101\uff75\102\uff75\103\uff75\104\uff75\106\uff75\001\002\000" +
    "\042\004\uff74\017\uff74\032\uff74\045\uff74\051\uff74\054\uff74" +
    "\055\uff74\061\uff74\067\uff74\071\uff74\074\uff74\101\uff74\102" +
    "\uff74\103\uff74\104\uff74\106\uff74\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\060\004\uff7f\005\uff7f\010" +
    "\uff7f\013\uff7f\020\uff7f\027\uff7f\036\uff7f\037\uff7f\043\uff7f" +
    "\046\uff7f\047\uff7f\050\uff7f\052\uff7f\053\uff7f\056\uff7f\057" +
    "\uff7f\060\uff7f\062\uff7f\063\uff7f\065\uff7f\066\uff7f\070\uff7f" +
    "\071\uff7f\001\002\000\012\004\uffd6\065\uffd6\105\uffd6\106" +
    "\uffd6\001\002\000\042\004\116\017\125\032\112\045\120" +
    "\051\121\054\107\055\124\061\111\067\114\071\126\074" +
    "\101\101\106\102\123\103\110\104\073\106\115\001\002" +
    "\000\044\004\116\017\125\032\112\045\120\051\121\054" +
    "\107\055\124\061\111\065\uff94\067\114\071\126\074\101" +
    "\101\106\102\123\103\110\104\073\106\115\001\002\000" +
    "\076\004\uff64\005\uff64\006\uff64\007\uff64\010\uff64\013\uff64" +
    "\020\uff64\024\uff64\027\uff64\036\uff64\037\uff64\043\uff64\044" +
    "\uff64\045\uff64\046\uff64\047\uff64\050\uff64\051\uff64\052\uff64" +
    "\053\uff64\056\uff64\057\uff64\060\uff64\061\uff64\062\uff64\063" +
    "\uff64\065\uff64\066\uff64\070\uff64\071\uff64\001\002\000\004" +
    "\106\214\001\002\000\004\106\213\001\002\000\076\004" +
    "\uff65\005\uff65\006\uff65\007\uff65\010\uff65\013\uff65\020\uff65" +
    "\024\uff65\027\uff65\036\uff65\037\uff65\043\uff65\044\uff65\045" +
    "\uff65\046\uff65\047\uff65\050\uff65\051\uff65\052\uff65\053\uff65" +
    "\056\uff65\057\uff65\060\uff65\061\uff65\062\uff65\063\uff65\065" +
    "\uff65\066\uff65\070\uff65\071\uff65\001\002\000\076\004\uff67" +
    "\005\uff67\006\uff67\007\uff67\010\uff67\013\uff67\020\uff67\024" +
    "\uff67\027\uff67\036\uff67\037\uff67\043\uff67\044\uff67\045\uff67" +
    "\046\uff67\047\uff67\050\uff67\051\uff67\052\uff67\053\uff67\056" +
    "\uff67\057\uff67\060\uff67\061\uff67\062\uff67\063\uff67\065\uff67" +
    "\066\uff67\070\uff67\071\uff67\001\002\000\006\020\221\065" +
    "\uff95\001\002\000\006\020\uff93\065\uff93\001\002\000\004" +
    "\065\220\001\002\000\076\004\uff63\005\uff63\006\uff63\007" +
    "\uff63\010\uff63\013\uff63\020\uff63\024\uff63\027\uff63\036\uff63" +
    "\037\uff63\043\uff63\044\uff63\045\uff63\046\uff63\047\uff63\050" +
    "\uff63\051\uff63\052\uff63\053\uff63\056\uff63\057\uff63\060\uff63" +
    "\061\uff63\062\uff63\063\uff63\065\uff63\066\uff63\070\uff63\071" +
    "\uff63\001\002\000\042\004\116\017\125\032\112\045\120" +
    "\051\121\054\107\055\124\061\111\067\114\071\126\074" +
    "\101\101\106\102\123\103\110\104\073\106\115\001\002" +
    "\000\006\020\uff92\065\uff92\001\002\000\004\063\224\001" +
    "\002\000\076\004\uff66\005\uff66\006\uff66\007\uff66\010\uff66" +
    "\013\uff66\020\uff66\024\uff66\027\uff66\036\uff66\037\uff66\043" +
    "\uff66\044\uff66\045\uff66\046\uff66\047\uff66\050\uff66\051\uff66" +
    "\052\uff66\053\uff66\056\uff66\057\uff66\060\uff66\061\uff66\062" +
    "\uff66\063\uff66\065\uff66\066\uff66\070\uff66\071\uff66\001\002" +
    "\000\042\004\116\017\125\032\112\045\120\051\121\054" +
    "\107\055\124\061\111\067\114\071\126\074\101\101\106" +
    "\102\123\103\110\104\073\106\115\001\002\000\020\020" +
    "\uff91\043\uff91\057\uff91\062\uff91\063\uff91\065\uff91\066\uff91" +
    "\001\002\000\006\020\uffb0\066\uffb0\001\002\000\006\020" +
    "\231\066\232\001\002\000\004\105\233\001\002\000\122" +
    "\002\uffed\004\uffed\011\uffed\012\uffed\014\uffed\015\uffed\017" +
    "\uffed\021\uffed\022\uffed\023\uffed\030\uffed\031\uffed\032\uffed" +
    "\033\uffed\034\uffed\035\uffed\040\uffed\041\uffed\043\uffed\045" +
    "\uffed\051\uffed\054\uffed\055\uffed\061\uffed\062\uffed\064\uffed" +
    "\067\uffed\071\uffed\072\uffed\073\uffed\074\uffed\075\uffed\076" +
    "\uffed\100\uffed\101\uffed\102\uffed\103\uffed\104\uffed\105\uffed" +
    "\106\uffed\001\002\000\006\020\uffaf\066\uffaf\001\002\000" +
    "\036\002\ufffb\011\ufffb\014\ufffb\021\ufffb\031\ufffb\033\ufffb" +
    "\034\ufffb\035\ufffb\041\ufffb\072\ufffb\073\ufffb\075\ufffb\100" +
    "\ufffb\105\ufffb\001\002\000\010\044\064\071\060\106\uffd5" +
    "\001\002\000\010\044\uffdf\071\uffdf\106\uffdf\001\002\000" +
    "\004\106\271\001\002\000\004\016\263\001\002\000\020" +
    "\011\034\014\031\033\035\034\240\041\036\100\243\105" +
    "\032\001\002\000\010\044\064\071\060\106\uffd5\001\002" +
    "\000\004\106\244\001\002\000\004\007\245\001\002\000" +
    "\042\004\116\017\125\032\112\045\120\051\121\054\107" +
    "\055\124\061\111\067\114\071\126\074\101\101\106\102" +
    "\123\103\110\104\073\106\115\001\002\000\004\066\247" +
    "\001\002\000\122\002\ufff0\004\ufff0\011\ufff0\012\ufff0\014" +
    "\ufff0\015\ufff0\017\ufff0\021\ufff0\022\ufff0\023\ufff0\030\ufff0" +
    "\031\ufff0\032\ufff0\033\ufff0\034\ufff0\035\ufff0\040\ufff0\041" +
    "\ufff0\043\ufff0\045\ufff0\051\ufff0\054\ufff0\055\ufff0\061\ufff0" +
    "\062\ufff0\064\ufff0\067\ufff0\071\ufff0\072\ufff0\073\ufff0\074" +
    "\ufff0\075\ufff0\076\ufff0\100\ufff0\101\ufff0\102\ufff0\103\ufff0" +
    "\104\ufff0\105\ufff0\106\ufff0\001\002\000\004\106\260\001" +
    "\002\000\006\020\252\066\253\001\002\000\010\044\064" +
    "\071\060\106\uffd5\001\002\000\122\002\ufff1\004\ufff1\011" +
    "\ufff1\012\ufff1\014\ufff1\015\ufff1\017\ufff1\021\ufff1\022\ufff1" +
    "\023\ufff1\030\ufff1\031\ufff1\032\ufff1\033\ufff1\034\ufff1\035" +
    "\ufff1\040\ufff1\041\ufff1\043\ufff1\045\ufff1\051\ufff1\054\ufff1" +
    "\055\ufff1\061\ufff1\062\ufff1\064\ufff1\067\ufff1\071\ufff1\072" +
    "\ufff1\073\ufff1\074\ufff1\075\ufff1\076\ufff1\100\ufff1\101\ufff1" +
    "\102\ufff1\103\ufff1\104\ufff1\105\ufff1\106\ufff1\001\002\000" +
    "\004\106\255\001\002\000\004\007\256\001\002\000\042" +
    "\004\116\017\125\032\112\045\120\051\121\054\107\055" +
    "\124\061\111\067\114\071\126\074\101\101\106\102\123" +
    "\103\110\104\073\106\115\001\002\000\006\020\uffab\066" +
    "\uffab\001\002\000\004\007\261\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\006\020\uffac\066\uffac\001" +
    "\002\000\016\011\034\014\031\033\035\041\036\077\042" +
    "\105\032\001\002\000\006\004\043\045\uffb3\001\002\000" +
    "\004\045\266\001\002\000\020\011\034\014\031\033\035" +
    "\034\033\041\036\065\uffb8\105\032\001\002\000\004\065" +
    "\270\001\002\000\010\044\uffde\071\uffde\106\uffde\001\002" +
    "\000\004\007\272\001\002\000\042\004\116\017\125\032" +
    "\112\045\120\051\121\054\107\055\124\061\111\067\114" +
    "\071\126\074\101\101\106\102\123\103\110\104\073\106" +
    "\115\001\002\000\004\066\274\001\002\000\122\002\ufff2" +
    "\004\ufff2\011\ufff2\012\ufff2\014\ufff2\015\ufff2\017\ufff2\021" +
    "\ufff2\022\ufff2\023\ufff2\030\ufff2\031\ufff2\032\ufff2\033\ufff2" +
    "\034\ufff2\035\ufff2\040\ufff2\041\ufff2\043\ufff2\045\ufff2\051" +
    "\ufff2\054\ufff2\055\ufff2\061\ufff2\062\ufff2\064\ufff2\067\ufff2" +
    "\071\ufff2\072\ufff2\073\ufff2\074\ufff2\075\ufff2\076\ufff2\100" +
    "\ufff2\101\ufff2\102\ufff2\103\ufff2\104\ufff2\105\ufff2\106\ufff2" +
    "\001\002\000\004\106\314\001\002\000\006\020\277\066" +
    "\300\001\002\000\010\044\064\071\060\106\uffd5\001\002" +
    "\000\122\002\ufff3\004\ufff3\011\ufff3\012\ufff3\014\ufff3\015" +
    "\ufff3\017\ufff3\021\ufff3\022\ufff3\023\ufff3\030\ufff3\031\ufff3" +
    "\032\ufff3\033\ufff3\034\ufff3\035\ufff3\040\ufff3\041\ufff3\043" +
    "\ufff3\045\ufff3\051\ufff3\054\ufff3\055\ufff3\061\ufff3\062\ufff3" +
    "\064\ufff3\067\ufff3\071\ufff3\072\ufff3\073\ufff3\074\ufff3\075" +
    "\ufff3\076\ufff3\100\ufff3\101\ufff3\102\ufff3\103\ufff3\104\ufff3" +
    "\105\ufff3\106\ufff3\001\002\000\004\106\302\001\002\000" +
    "\010\007\304\020\uffa8\066\uffa8\001\002\000\006\020\uffad" +
    "\066\uffad\001\002\000\044\004\116\017\125\032\112\043" +
    "\306\045\120\051\121\054\107\055\124\061\111\067\114" +
    "\071\126\074\101\101\106\102\123\103\110\104\073\106" +
    "\115\001\002\000\006\020\uffaa\066\uffaa\001\002\000\042" +
    "\004\116\017\125\032\112\045\120\051\121\054\107\055" +
    "\124\061\111\067\114\071\126\074\101\101\106\102\123" +
    "\103\110\104\073\106\115\001\002\000\006\020\uffa7\062" +
    "\uffa7\001\002\000\006\020\312\062\311\001\002\000\006" +
    "\020\uffa9\066\uffa9\001\002\000\042\004\116\017\125\032" +
    "\112\045\120\051\121\054\107\055\124\061\111\067\114" +
    "\071\126\074\101\101\106\102\123\103\110\104\073\106" +
    "\115\001\002\000\006\020\uffa6\062\uffa6\001\002\000\010" +
    "\007\304\020\uffa8\066\uffa8\001\002\000\006\020\uffae\066" +
    "\uffae\001\002\000\004\043\317\001\002\000\016\011\uffec" +
    "\014\uffec\033\uffec\034\uffec\041\uffec\105\uffec\001\002\000" +
    "\016\011\034\014\031\033\035\034\240\041\036\105\032" +
    "\001\002\000\010\044\064\071\060\106\uffd5\001\002\000" +
    "\020\011\034\014\031\033\035\034\240\041\036\062\324" +
    "\105\032\001\002\000\020\011\uffea\014\uffea\033\uffea\034" +
    "\uffea\041\uffea\062\uffea\105\uffea\001\002\000\004\066\326" +
    "\001\002\000\020\011\uffe9\014\uffe9\033\uffe9\034\uffe9\041" +
    "\uffe9\062\uffe9\105\uffe9\001\002\000\122\002\uffeb\004\uffeb" +
    "\011\uffeb\012\uffeb\014\uffeb\015\uffeb\017\uffeb\021\uffeb\022" +
    "\uffeb\023\uffeb\030\uffeb\031\uffeb\032\uffeb\033\uffeb\034\uffeb" +
    "\035\uffeb\040\uffeb\041\uffeb\043\uffeb\045\uffeb\051\uffeb\054" +
    "\uffeb\055\uffeb\061\uffeb\062\uffeb\064\uffeb\067\uffeb\071\uffeb" +
    "\072\uffeb\073\uffeb\074\uffeb\075\uffeb\076\uffeb\100\uffeb\101" +
    "\uffeb\102\uffeb\103\uffeb\104\uffeb\105\uffeb\106\uffeb\001\002" +
    "\000\004\106\335\001\002\000\006\020\331\066\332\001" +
    "\002\000\010\044\064\071\060\106\uffd5\001\002\000\020" +
    "\011\uffe8\014\uffe8\033\uffe8\034\uffe8\041\uffe8\062\uffe8\105" +
    "\uffe8\001\002\000\004\106\334\001\002\000\006\020\uffb1" +
    "\066\uffb1\001\002\000\006\020\uffb2\066\uffb2\001\002\000" +
    "\016\011\034\014\031\033\035\041\036\077\042\105\032" +
    "\001\002\000\006\004\043\106\uffb3\001\002\000\004\106" +
    "\341\001\002\000\004\045\uffe7\001\002\000\004\045\343" +
    "\001\002\000\020\011\034\014\031\033\035\034\033\041" +
    "\036\065\uffb8\105\032\001\002\000\004\065\345\001\002" +
    "\000\004\043\uffe6\001\002\000\004\043\347\001\002\000" +
    "\114\004\116\011\uffee\012\374\014\uffee\015\364\017\125" +
    "\021\uffee\022\354\023\353\030\371\032\112\033\uffee\034" +
    "\uffee\040\377\041\uffee\043\361\045\120\051\121\054\107" +
    "\055\124\061\111\062\uffc9\064\356\067\114\071\126\072" +
    "\014\073\011\074\101\075\024\076\352\100\uffee\101\106" +
    "\102\123\103\110\104\073\105\uffee\106\115\001\002\000" +
    "\114\004\uffbc\011\uffbc\012\uffbc\014\uffbc\015\uffbc\017\uffbc" +
    "\021\uffbc\022\uffbc\023\uffbc\030\uffbc\032\uffbc\033\uffbc\034" +
    "\uffbc\040\uffbc\041\uffbc\043\uffbc\045\uffbc\051\uffbc\054\uffbc" +
    "\055\uffbc\061\uffbc\062\uffbc\064\uffbc\067\uffbc\071\uffbc\072" +
    "\uffbc\073\uffbc\074\uffbc\075\uffbc\076\uffbc\100\uffbc\101\uffbc" +
    "\102\uffbc\103\uffbc\104\uffbc\105\uffbc\106\uffbc\001\002\000" +
    "\114\004\uffbd\011\uffbd\012\uffbd\014\uffbd\015\uffbd\017\uffbd" +
    "\021\uffbd\022\uffbd\023\uffbd\030\uffbd\032\uffbd\033\uffbd\034" +
    "\uffbd\040\uffbd\041\uffbd\043\uffbd\045\uffbd\051\uffbd\054\uffbd" +
    "\055\uffbd\061\uffbd\062\uffbd\064\uffbd\067\uffbd\071\uffbd\072" +
    "\uffbd\073\uffbd\074\uffbd\075\uffbd\076\uffbd\100\uffbd\101\uffbd" +
    "\102\uffbd\103\uffbd\104\uffbd\105\uffbd\106\uffbd\001\002\000" +
    "\042\004\116\017\125\032\112\045\120\051\121\054\107" +
    "\055\124\061\111\067\114\071\126\074\101\101\106\102" +
    "\123\103\110\104\073\106\115\001\002\000\004\057\u0119" +
    "\001\002\000\004\066\u0118\001\002\000\114\004\uffbb\011" +
    "\uffbb\012\uffbb\014\uffbb\015\uffbb\017\uffbb\021\uffbb\022\uffbb" +
    "\023\uffbb\030\uffbb\032\uffbb\033\uffbb\034\uffbb\040\uffbb\041" +
    "\uffbb\043\uffbb\045\uffbb\051\uffbb\054\uffbb\055\uffbb\061\uffbb" +
    "\062\uffbb\064\uffbb\067\uffbb\071\uffbb\072\uffbb\073\uffbb\074" +
    "\uffbb\075\uffbb\076\uffbb\100\uffbb\101\uffbb\102\uffbb\103\uffbb" +
    "\104\uffbb\105\uffbb\106\uffbb\001\002\000\044\004\116\017" +
    "\125\032\112\045\120\051\121\054\107\055\124\061\111" +
    "\066\u0116\067\114\071\126\074\101\101\106\102\123\103" +
    "\110\104\073\106\115\001\002\000\114\004\uffba\011\uffba" +
    "\012\uffba\014\uffba\015\uffba\017\uffba\021\uffba\022\uffba\023" +
    "\uffba\030\uffba\032\uffba\033\uffba\034\uffba\040\uffba\041\uffba" +
    "\043\uffba\045\uffba\051\uffba\054\uffba\055\uffba\061\uffba\062" +
    "\uffba\064\uffba\067\uffba\071\uffba\072\uffba\073\uffba\074\uffba" +
    "\075\uffba\076\uffba\100\uffba\101\uffba\102\uffba\103\uffba\104" +
    "\uffba\105\uffba\106\uffba\001\002\000\114\004\uffc0\011\uffc0" +
    "\012\uffc0\014\uffc0\015\uffc0\017\uffc0\021\uffc0\022\uffc0\023" +
    "\uffc0\030\uffc0\032\uffc0\033\uffc0\034\uffc0\040\uffc0\041\uffc0" +
    "\043\uffc0\045\uffc0\051\uffc0\054\uffc0\055\uffc0\061\uffc0\062" +
    "\uffc0\064\uffc0\067\uffc0\071\uffc0\072\uffc0\073\uffc0\074\uffc0" +
    "\075\uffc0\076\uffc0\100\uffc0\101\uffc0\102\uffc0\103\uffc0\104" +
    "\uffc0\105\uffc0\106\uffc0\001\002\000\114\004\uffcd\011\uffcd" +
    "\012\uffcd\014\uffcd\015\uffcd\017\uffcd\021\uffcd\022\uffcd\023" +
    "\uffcd\030\uffcd\032\uffcd\033\uffcd\034\uffcd\040\uffcd\041\uffcd" +
    "\043\uffcd\045\uffcd\051\uffcd\054\uffcd\055\uffcd\061\uffcd\062" +
    "\uffcd\064\uffcd\067\uffcd\071\uffcd\072\uffcd\073\uffcd\074\uffcd" +
    "\075\uffcd\076\uffcd\100\uffcd\101\uffcd\102\uffcd\103\uffcd\104" +
    "\uffcd\105\uffcd\106\uffcd\001\002\000\114\004\116\011\uffee" +
    "\012\374\014\uffee\015\364\017\125\021\uffee\022\354\023" +
    "\353\030\371\032\112\033\uffee\034\uffee\040\377\041\uffee" +
    "\043\361\045\120\051\121\054\107\055\124\061\111\062" +
    "\uffca\064\356\067\114\071\126\072\014\073\011\074\101" +
    "\075\024\076\352\100\uffee\101\106\102\123\103\110\104" +
    "\073\105\uffee\106\115\001\002\000\114\004\uffc3\011\uffc3" +
    "\012\uffc3\014\uffc3\015\uffc3\017\uffc3\021\uffc3\022\uffc3\023" +
    "\uffc3\030\uffc3\032\uffc3\033\uffc3\034\uffc3\040\uffc3\041\uffc3" +
    "\043\uffc3\045\uffc3\051\uffc3\054\uffc3\055\uffc3\061\uffc3\062" +
    "\uffc3\064\uffc3\067\uffc3\071\uffc3\072\uffc3\073\uffc3\074\uffc3" +
    "\075\uffc3\076\uffc3\100\uffc3\101\uffc3\102\uffc3\103\uffc3\104" +
    "\uffc3\105\uffc3\106\uffc3\001\002\000\004\042\u010d\001\002" +
    "\000\114\004\uffc1\011\uffc1\012\uffc1\014\uffc1\015\uffc1\017" +
    "\uffc1\021\uffc1\022\uffc1\023\uffc1\030\uffc1\032\uffc1\033\uffc1" +
    "\034\uffc1\040\uffc1\041\uffc1\043\uffc1\045\uffc1\051\uffc1\054" +
    "\uffc1\055\uffc1\061\uffc1\062\uffc1\064\uffc1\067\uffc1\071\uffc1" +
    "\072\uffc1\073\uffc1\074\uffc1\075\uffc1\076\uffc1\100\uffc1\101" +
    "\uffc1\102\uffc1\103\uffc1\104\uffc1\105\uffc1\106\uffc1\001\002" +
    "\000\114\004\uffc4\011\uffc4\012\uffc4\014\uffc4\015\uffc4\017" +
    "\uffc4\021\uffc4\022\uffc4\023\uffc4\030\uffc4\032\uffc4\033\uffc4" +
    "\034\uffc4\040\uffc4\041\uffc4\043\uffc4\045\uffc4\051\uffc4\054" +
    "\uffc4\055\uffc4\061\uffc4\062\uffc4\064\uffc4\067\uffc4\071\uffc4" +
    "\072\uffc4\073\uffc4\074\uffc4\075\uffc4\076\uffc4\100\uffc4\101" +
    "\uffc4\102\uffc4\103\uffc4\104\uffc4\105\uffc4\106\uffc4\001\002" +
    "\000\004\066\u010c\001\002\000\004\062\u010b\001\002\000" +
    "\004\045\u0107\001\002\000\114\004\uffc6\011\uffc6\012\uffc6" +
    "\014\uffc6\015\uffc6\017\uffc6\021\uffc6\022\uffc6\023\uffc6\030" +
    "\uffc6\032\uffc6\033\uffc6\034\uffc6\040\uffc6\041\uffc6\043\uffc6" +
    "\045\uffc6\051\uffc6\054\uffc6\055\uffc6\061\uffc6\062\uffc6\064" +
    "\uffc6\067\uffc6\071\uffc6\072\uffc6\073\uffc6\074\uffc6\075\uffc6" +
    "\076\uffc6\100\uffc6\101\uffc6\102\uffc6\103\uffc6\104\uffc6\105" +
    "\uffc6\106\uffc6\001\002\000\114\004\uffc8\011\uffc8\012\uffc8" +
    "\014\uffc8\015\uffc8\017\uffc8\021\uffc8\022\uffc8\023\uffc8\030" +
    "\uffc8\032\uffc8\033\uffc8\034\uffc8\040\uffc8\041\uffc8\043\uffc8" +
    "\045\uffc8\051\uffc8\054\uffc8\055\uffc8\061\uffc8\062\uffc8\064" +
    "\uffc8\067\uffc8\071\uffc8\072\uffc8\073\uffc8\074\uffc8\075\uffc8" +
    "\076\uffc8\100\uffc8\101\uffc8\102\uffc8\103\uffc8\104\uffc8\105" +
    "\uffc8\106\uffc8\001\002\000\004\066\u0106\001\002\000\114" +
    "\004\uffc5\011\uffc5\012\uffc5\014\uffc5\015\uffc5\017\uffc5\021" +
    "\uffc5\022\uffc5\023\uffc5\030\uffc5\032\uffc5\033\uffc5\034\uffc5" +
    "\040\uffc5\041\uffc5\043\uffc5\045\uffc5\051\uffc5\054\uffc5\055" +
    "\uffc5\061\uffc5\062\uffc5\064\uffc5\067\uffc5\071\uffc5\072\uffc5" +
    "\073\uffc5\074\uffc5\075\uffc5\076\uffc5\100\uffc5\101\uffc5\102" +
    "\uffc5\103\uffc5\104\uffc5\105\uffc5\106\uffc5\001\002\000\114" +
    "\004\uffbe\011\uffbe\012\uffbe\014\uffbe\015\uffbe\017\uffbe\021" +
    "\uffbe\022\uffbe\023\uffbe\030\uffbe\032\uffbe\033\uffbe\034\uffbe" +
    "\040\uffbe\041\uffbe\043\uffbe\045\uffbe\051\uffbe\054\uffbe\055" +
    "\uffbe\061\uffbe\062\uffbe\064\uffbe\067\uffbe\071\uffbe\072\uffbe" +
    "\073\uffbe\074\uffbe\075\uffbe\076\uffbe\100\uffbe\101\uffbe\102" +
    "\uffbe\103\uffbe\104\uffbe\105\uffbe\106\uffbe\001\002\000\042" +
    "\004\116\017\125\032\112\045\120\051\121\054\107\055" +
    "\124\061\111\067\114\071\126\074\101\101\106\102\123" +
    "\103\110\104\073\106\115\001\002\000\114\004\uffbf\011" +
    "\uffbf\012\uffbf\014\uffbf\015\uffbf\017\uffbf\021\uffbf\022\uffbf" +
    "\023\uffbf\030\uffbf\032\uffbf\033\uffbf\034\uffbf\040\uffbf\041" +
    "\uffbf\043\uffbf\045\uffbf\051\uffbf\054\uffbf\055\uffbf\061\uffbf" +
    "\062\uffbf\064\uffbf\067\uffbf\071\uffbf\072\uffbf\073\uffbf\074" +
    "\uffbf\075\uffbf\076\uffbf\100\uffbf\101\uffbf\102\uffbf\103\uffbf" +
    "\104\uffbf\105\uffbf\106\uffbf\001\002\000\004\043\361\001" +
    "\002\000\116\004\uffa3\011\uffa3\012\uffa3\014\uffa3\015\uffa3" +
    "\017\uffa3\021\uffa3\022\uffa3\023\uffa3\025\u0104\030\uffa3\032" +
    "\uffa3\033\uffa3\034\uffa3\040\uffa3\041\uffa3\043\uffa3\045\uffa3" +
    "\051\uffa3\054\uffa3\055\uffa3\061\uffa3\062\uffa3\064\uffa3\067" +
    "\uffa3\071\uffa3\072\uffa3\073\uffa3\074\uffa3\075\uffa3\076\uffa3" +
    "\100\uffa3\101\uffa3\102\uffa3\103\uffa3\104\uffa3\105\uffa3\106" +
    "\uffa3\001\002\000\114\004\uffa5\011\uffa5\012\uffa5\014\uffa5" +
    "\015\uffa5\017\uffa5\021\uffa5\022\uffa5\023\uffa5\030\uffa5\032" +
    "\uffa5\033\uffa5\034\uffa5\040\uffa5\041\uffa5\043\uffa5\045\uffa5" +
    "\051\uffa5\054\uffa5\055\uffa5\061\uffa5\062\uffa5\064\uffa5\067" +
    "\uffa5\071\uffa5\072\uffa5\073\uffa5\074\uffa5\075\uffa5\076\uffa5" +
    "\100\uffa5\101\uffa5\102\uffa5\103\uffa5\104\uffa5\105\uffa5\106" +
    "\uffa5\001\002\000\004\043\361\001\002\000\114\004\uffa4" +
    "\011\uffa4\012\uffa4\014\uffa4\015\uffa4\017\uffa4\021\uffa4\022" +
    "\uffa4\023\uffa4\030\uffa4\032\uffa4\033\uffa4\034\uffa4\040\uffa4" +
    "\041\uffa4\043\uffa4\045\uffa4\051\uffa4\054\uffa4\055\uffa4\061" +
    "\uffa4\062\uffa4\064\uffa4\067\uffa4\071\uffa4\072\uffa4\073\uffa4" +
    "\074\uffa4\075\uffa4\076\uffa4\100\uffa4\101\uffa4\102\uffa4\103" +
    "\uffa4\104\uffa4\105\uffa4\106\uffa4\001\002\000\114\004\uffa1" +
    "\011\uffa1\012\uffa1\014\uffa1\015\uffa1\017\uffa1\021\uffa1\022" +
    "\uffa1\023\uffa1\030\uffa1\032\uffa1\033\uffa1\034\uffa1\040\uffa1" +
    "\041\uffa1\043\uffa1\045\uffa1\051\uffa1\054\uffa1\055\uffa1\061" +
    "\uffa1\062\uffa1\064\uffa1\067\uffa1\071\uffa1\072\uffa1\073\uffa1" +
    "\074\uffa1\075\uffa1\076\uffa1\100\uffa1\101\uffa1\102\uffa1\103" +
    "\uffa1\104\uffa1\105\uffa1\106\uffa1\001\002\000\042\004\116" +
    "\017\125\032\112\045\120\051\121\054\107\055\124\061" +
    "\111\067\114\071\126\074\101\101\106\102\123\103\110" +
    "\104\073\106\115\001\002\000\004\065\u0109\001\002\000" +
    "\004\066\u010a\001\002\000\114\004\uff9f\011\uff9f\012\uff9f" +
    "\014\uff9f\015\uff9f\017\uff9f\021\uff9f\022\uff9f\023\uff9f\030" +
    "\uff9f\032\uff9f\033\uff9f\034\uff9f\040\uff9f\041\uff9f\043\uff9f" +
    "\045\uff9f\051\uff9f\054\uff9f\055\uff9f\061\uff9f\062\uff9f\064" +
    "\uff9f\067\uff9f\071\uff9f\072\uff9f\073\uff9f\074\uff9f\075\uff9f" +
    "\076\uff9f\100\uff9f\101\uff9f\102\uff9f\103\uff9f\104\uff9f\105" +
    "\uff9f\106\uff9f\001\002\000\036\002\uffe5\011\uffe5\014\uffe5" +
    "\021\uffe5\031\uffe5\033\uffe5\034\uffe5\035\uffe5\041\uffe5\072" +
    "\uffe5\073\uffe5\075\uffe5\100\uffe5\105\uffe5\001\002\000\114" +
    "\004\uffc2\011\uffc2\012\uffc2\014\uffc2\015\uffc2\017\uffc2\021" +
    "\uffc2\022\uffc2\023\uffc2\030\uffc2\032\uffc2\033\uffc2\034\uffc2" +
    "\040\uffc2\041\uffc2\043\uffc2\045\uffc2\051\uffc2\054\uffc2\055" +
    "\uffc2\061\uffc2\062\uffc2\064\uffc2\067\uffc2\071\uffc2\072\uffc2" +
    "\073\uffc2\074\uffc2\075\uffc2\076\uffc2\100\uffc2\101\uffc2\102" +
    "\uffc2\103\uffc2\104\uffc2\105\uffc2\106\uffc2\001\002\000\042" +
    "\004\116\017\125\032\112\045\120\051\121\054\107\055" +
    "\124\061\111\067\114\071\126\074\101\101\106\102\123" +
    "\103\110\104\073\106\115\001\002\000\004\066\u010f\001" +
    "\002\000\114\004\uff9c\011\uff9c\012\uff9c\014\uff9c\015\uff9c" +
    "\017\uff9c\021\uff9c\022\uff9c\023\uff9c\030\uff9c\032\uff9c\033" +
    "\uff9c\034\uff9c\040\uff9c\041\uff9c\043\uff9c\045\uff9c\051\uff9c" +
    "\054\uff9c\055\uff9c\061\uff9c\062\uff9c\064\uff9c\067\uff9c\071" +
    "\uff9c\072\uff9c\073\uff9c\074\uff9c\075\uff9c\076\uff9c\100\uff9c" +
    "\101\uff9c\102\uff9c\103\uff9c\104\uff9c\105\uff9c\106\uff9c\001" +
    "\002\000\114\004\uffc7\011\uffc7\012\uffc7\014\uffc7\015\uffc7" +
    "\017\uffc7\021\uffc7\022\uffc7\023\uffc7\030\uffc7\032\uffc7\033" +
    "\uffc7\034\uffc7\040\uffc7\041\uffc7\043\uffc7\045\uffc7\051\uffc7" +
    "\054\uffc7\055\uffc7\061\uffc7\062\uffc7\064\uffc7\067\uffc7\071" +
    "\uffc7\072\uffc7\073\uffc7\074\uffc7\075\uffc7\076\uffc7\100\uffc7" +
    "\101\uffc7\102\uffc7\103\uffc7\104\uffc7\105\uffc7\106\uffc7\001" +
    "\002\000\114\004\116\011\uffee\012\374\014\uffee\015\364" +
    "\017\125\021\uffee\022\354\023\353\030\371\032\112\033" +
    "\uffee\034\uffee\040\377\041\uffee\043\361\045\120\051\121" +
    "\054\107\055\124\061\111\062\uffc9\064\356\067\114\071" +
    "\126\072\014\073\011\074\101\075\024\076\352\100\uffee" +
    "\101\106\102\123\103\110\104\073\105\uffee\106\115\001" +
    "\002\000\004\062\uffcc\001\002\000\004\062\u0114\001\002" +
    "\000\116\004\uffcb\011\uffcb\012\uffcb\014\uffcb\015\uffcb\017" +
    "\uffcb\021\uffcb\022\uffcb\023\uffcb\025\uffcb\030\uffcb\032\uffcb" +
    "\033\uffcb\034\uffcb\040\uffcb\041\uffcb\043\uffcb\045\uffcb\051" +
    "\uffcb\054\uffcb\055\uffcb\061\uffcb\062\uffcb\064\uffcb\067\uffcb" +
    "\071\uffcb\072\uffcb\073\uffcb\074\uffcb\075\uffcb\076\uffcb\100" +
    "\uffcb\101\uffcb\102\uffcb\103\uffcb\104\uffcb\105\uffcb\106\uffcb" +
    "\001\002\000\004\066\u0117\001\002\000\114\004\uff9e\011" +
    "\uff9e\012\uff9e\014\uff9e\015\uff9e\017\uff9e\021\uff9e\022\uff9e" +
    "\023\uff9e\030\uff9e\032\uff9e\033\uff9e\034\uff9e\040\uff9e\041" +
    "\uff9e\043\uff9e\045\uff9e\051\uff9e\054\uff9e\055\uff9e\061\uff9e" +
    "\062\uff9e\064\uff9e\067\uff9e\071\uff9e\072\uff9e\073\uff9e\074" +
    "\uff9e\075\uff9e\076\uff9e\100\uff9e\101\uff9e\102\uff9e\103\uff9e" +
    "\104\uff9e\105\uff9e\106\uff9e\001\002\000\114\004\uff9d\011" +
    "\uff9d\012\uff9d\014\uff9d\015\uff9d\017\uff9d\021\uff9d\022\uff9d" +
    "\023\uff9d\030\uff9d\032\uff9d\033\uff9d\034\uff9d\040\uff9d\041" +
    "\uff9d\043\uff9d\045\uff9d\051\uff9d\054\uff9d\055\uff9d\061\uff9d" +
    "\062\uff9d\064\uff9d\067\uff9d\071\uff9d\072\uff9d\073\uff9d\074" +
    "\uff9d\075\uff9d\076\uff9d\100\uff9d\101\uff9d\102\uff9d\103\uff9d" +
    "\104\uff9d\105\uff9d\106\uff9d\001\002\000\114\004\uffa0\011" +
    "\uffa0\012\uffa0\014\uffa0\015\uffa0\017\uffa0\021\uffa0\022\uffa0" +
    "\023\uffa0\030\uffa0\032\uffa0\033\uffa0\034\uffa0\040\uffa0\041" +
    "\uffa0\043\uffa0\045\uffa0\051\uffa0\054\uffa0\055\uffa0\061\uffa0" +
    "\062\uffa0\064\uffa0\067\uffa0\071\uffa0\072\uffa0\073\uffa0\074" +
    "\uffa0\075\uffa0\076\uffa0\100\uffa0\101\uffa0\102\uffa0\103\uffa0" +
    "\104\uffa0\105\uffa0\106\uffa0\001\002\000\044\004\116\017" +
    "\125\026\u011d\032\112\045\120\051\121\054\107\055\124" +
    "\061\111\067\114\071\126\074\101\101\106\102\123\103" +
    "\110\104\073\106\115\001\002\000\006\057\uff98\066\uff98" +
    "\001\002\000\006\057\uff9a\066\uff9a\001\002\000\006\057" +
    "\u011e\066\u011f\001\002\000\006\057\uff97\066\uff97\001\002" +
    "\000\044\004\116\017\125\026\u011d\032\112\045\120\051" +
    "\121\054\107\055\124\061\111\067\114\071\126\074\101" +
    "\101\106\102\123\103\110\104\073\106\115\001\002\000" +
    "\114\004\uff9b\011\uff9b\012\uff9b\014\uff9b\015\uff9b\017\uff9b" +
    "\021\uff9b\022\uff9b\023\uff9b\030\uff9b\032\uff9b\033\uff9b\034" +
    "\uff9b\040\uff9b\041\uff9b\043\uff9b\045\uff9b\051\uff9b\054\uff9b" +
    "\055\uff9b\061\uff9b\062\uff9b\064\uff9b\067\uff9b\071\uff9b\072" +
    "\uff9b\073\uff9b\074\uff9b\075\uff9b\076\uff9b\100\uff9b\101\uff9b" +
    "\102\uff9b\103\uff9b\104\uff9b\105\uff9b\106\uff9b\001\002\000" +
    "\006\057\uff99\066\uff99\001\002\000\004\043\361\001\002" +
    "\000\114\004\uffa2\011\uffa2\012\uffa2\014\uffa2\015\uffa2\017" +
    "\uffa2\021\uffa2\022\uffa2\023\uffa2\030\uffa2\032\uffa2\033\uffa2" +
    "\034\uffa2\040\uffa2\041\uffa2\043\uffa2\045\uffa2\051\uffa2\054" +
    "\uffa2\055\uffa2\061\uffa2\062\uffa2\064\uffa2\067\uffa2\071\uffa2" +
    "\072\uffa2\073\uffa2\074\uffa2\075\uffa2\076\uffa2\100\uffa2\101" +
    "\uffa2\102\uffa2\103\uffa2\104\uffa2\105\uffa2\106\uffa2\001\002" +
    "\000\010\044\064\071\060\106\uffd5\001\002\000\004\016" +
    "\u0125\001\002\000\016\011\034\014\031\033\035\041\036" +
    "\077\042\105\032\001\002\000\004\106\u0127\001\002\000" +
    "\004\045\uffe4\001\002\000\004\045\u0129\001\002\000\020" +
    "\011\034\014\031\033\035\034\033\041\036\065\uffb8\105" +
    "\032\001\002\000\004\065\u012b\001\002\000\004\066\uffe3" +
    "\001\002\000\004\066\u012d\001\002\000\036\002\uffe2\011" +
    "\uffe2\014\uffe2\021\uffe2\031\uffe2\033\uffe2\034\uffe2\035\uffe2" +
    "\041\uffe2\072\uffe2\073\uffe2\075\uffe2\100\uffe2\105\uffe2\001" +
    "\002\000\006\020\331\066\u012f\001\002\000\036\002\ufff4" +
    "\011\ufff4\014\ufff4\021\ufff4\031\ufff4\033\ufff4\034\ufff4\035" +
    "\ufff4\041\ufff4\072\ufff4\073\ufff4\075\ufff4\100\ufff4\105\ufff4" +
    "\001\002\000\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u012e\000\006\003\003\111\004\001\001\000\002\001" +
    "\001\000\026\004\021\005\017\006\014\007\016\010\005" +
    "\011\020\012\012\013\022\014\011\015\015\001\001\000" +
    "\002\001\001\000\012\075\025\076\026\077\235\101\u0122" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\075" +
    "\025\076\026\077\235\101\234\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\006\233\007\016\010\005\011\020" +
    "\012\012\013\022\014\011\015\015\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\075\025" +
    "\076\026\077\027\100\024\001\001\000\004\104\227\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\050\064" +
    "\051\065\052\061\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\075\025\076\026\077\037\102" +
    "\040\001\001\000\010\051\060\052\061\053\056\001\001" +
    "\000\004\016\043\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\057\047\075\025\076\026" +
    "\077\027\100\045\107\050\110\046\001\001\000\004\016" +
    "\054\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\057\053\075\025\076" +
    "\026\077\027\100\045\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\052\062\001\001\000\002\001\001\000\002" +
    "\001\001\000\042\041\077\043\121\056\116\060\112\061" +
    "\104\062\103\063\102\064\101\065\075\066\074\067\071" +
    "\070\070\071\067\072\066\073\076\074\073\001\001\000" +
    "\002\001\001\000\004\052\062\001\001\000\002\001\001" +
    "\000\004\055\202\001\001\000\004\054\175\001\001\000" +
    "\004\045\170\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\161\001\001\000\002\001\001\000\004\056" +
    "\207\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\043\121\056\116\072\145" +
    "\073\076\074\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\043\121\056\116\072\137\073" +
    "\076\074\073\001\001\000\014\043\121\056\116\072\136" +
    "\073\076\074\073\001\001\000\050\043\121\056\116\060" +
    "\131\061\104\062\103\063\102\064\101\065\075\066\074" +
    "\067\071\070\070\071\067\072\066\073\076\074\073\075" +
    "\025\076\026\077\027\100\132\001\001\000\002\001\001" +
    "\000\014\043\121\056\116\072\130\073\076\074\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\043\121\056\116\072\126\073\076\074\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\043\121\056" +
    "\116\072\134\073\076\074\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\043\121\056\116\072\141\073\076\074\073\075\025" +
    "\076\026\077\027\100\142\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\034\043\121\056\116\062\150\063\102\064" +
    "\101\065\075\066\074\067\071\070\070\071\067\072\147" +
    "\073\076\074\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\043\121\056\116\063\152\064\101\065\075" +
    "\066\074\067\071\070\070\071\067\072\147\073\076\074" +
    "\073\001\001\000\002\001\001\000\030\043\121\056\116" +
    "\064\154\065\075\066\074\067\071\070\070\071\067\072" +
    "\147\073\076\074\073\001\001\000\002\001\001\000\026" +
    "\043\121\056\116\065\156\066\074\067\071\070\070\071" +
    "\067\072\147\073\076\074\073\001\001\000\002\001\001" +
    "\000\024\043\121\056\116\066\160\067\071\070\070\071" +
    "\067\072\147\073\076\074\073\001\001\000\004\044\161" +
    "\001\001\000\022\043\121\056\116\067\164\070\070\071" +
    "\067\072\147\073\076\074\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\045\170\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\043\121" +
    "\056\116\070\172\071\067\072\147\073\076\074\073\001" +
    "\001\000\002\001\001\000\004\054\175\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\043\121\056\116\071" +
    "\176\072\147\073\076\074\073\001\001\000\004\055\202" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\043\121\056\116\072\203\073\076\074\073" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\043" +
    "\121\056\116\060\222\061\104\062\103\063\102\064\101" +
    "\065\075\066\074\067\071\070\070\071\067\072\066\073" +
    "\076\074\073\001\001\000\044\025\216\042\214\043\121" +
    "\056\116\060\215\061\104\062\103\063\102\064\101\065" +
    "\075\066\074\067\071\070\070\071\067\072\066\073\076" +
    "\074\073\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\040\043\121\056\116\060\221\061\104\062\103" +
    "\063\102\064\101\065\075\066\074\067\071\070\070\071" +
    "\067\072\066\073\076\074\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\040\043\121\056" +
    "\116\060\225\061\104\062\103\063\102\064\101\065\075" +
    "\066\074\067\071\070\070\071\067\072\066\073\076\074" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\050\274\051\065\052\061" +
    "\105\275\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\075\025\076\026\077\235\101\241" +
    "\001\001\000\012\050\247\051\065\052\061\106\250\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\043\121" +
    "\056\116\060\245\061\104\062\103\063\102\064\101\065" +
    "\075\066\074\067\071\070\070\071\067\072\066\073\076" +
    "\074\073\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\050\253\051\065" +
    "\052\061\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\042\041\256\043\121\056\116\060\112" +
    "\061\104\062\103\063\102\064\101\065\075\066\074\067" +
    "\071\070\070\071\067\072\066\073\076\074\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\042\041\261\043" +
    "\121\056\116\060\112\061\104\062\103\063\102\064\101" +
    "\065\075\066\074\067\071\070\070\071\067\072\066\073" +
    "\076\074\073\001\001\000\002\001\001\000\012\075\025" +
    "\076\026\077\037\102\263\001\001\000\004\016\264\001" +
    "\001\000\002\001\001\000\020\057\047\075\025\076\026" +
    "\077\027\100\045\107\266\110\046\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\043\121" +
    "\056\116\060\272\061\104\062\103\063\102\064\101\065" +
    "\075\066\074\067\071\070\070\071\067\072\066\073\076" +
    "\074\073\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\050\300\051\065" +
    "\052\061\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\302\001\001\000\002\001\001\000\040\043\121" +
    "\056\116\060\304\061\104\062\103\063\102\064\101\065" +
    "\075\066\074\067\071\070\070\071\067\072\066\073\076" +
    "\074\073\001\001\000\002\001\001\000\042\043\121\047" +
    "\307\056\116\060\306\061\104\062\103\063\102\064\101" +
    "\065\075\066\074\067\071\070\070\071\067\072\066\073" +
    "\076\074\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\040\043\121\056\116\060\312\061" +
    "\104\062\103\063\102\064\101\065\075\066\074\067\071" +
    "\070\070\071\067\072\066\073\076\074\073\001\001\000" +
    "\002\001\001\000\004\046\314\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\112\317\001\001\000\016\017" +
    "\321\020\322\075\025\076\026\077\235\101\320\001\001" +
    "\000\012\050\326\051\065\052\061\103\327\001\001\000" +
    "\014\020\324\075\025\076\026\077\235\101\320\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\050\332\051\065\052\061\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\075\025\076\026\077\037\102\336\001\001\000\004\016" +
    "\337\001\001\000\002\001\001\000\004\113\341\001\001" +
    "\000\002\001\001\000\020\057\047\075\025\076\026\077" +
    "\027\100\045\107\343\110\046\001\001\000\002\001\001" +
    "\000\004\114\345\001\001\000\002\001\001\000\100\012" +
    "\371\013\374\014\011\015\365\021\367\022\361\023\372" +
    "\024\362\026\364\030\357\031\377\032\375\033\350\034" +
    "\347\035\354\036\356\043\121\056\116\060\366\061\104" +
    "\062\103\063\102\064\101\065\075\066\074\067\071\070" +
    "\070\071\067\072\066\073\076\074\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\043\121\056\116\060" +
    "\u0120\061\104\062\103\063\102\064\101\065\075\066\074" +
    "\067\071\070\070\071\067\072\066\073\076\074\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\040\043\121\056\116\060\u0114\061\104\062\103\063" +
    "\102\064\101\065\075\066\074\067\071\070\070\071\067" +
    "\072\066\073\076\074\073\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\117\u0110\001\001\000\074\012\371" +
    "\013\374\014\011\015\365\023\u010f\024\362\026\364\030" +
    "\357\031\377\032\375\033\350\034\347\035\354\036\356" +
    "\043\121\056\116\060\366\061\104\062\103\063\102\064" +
    "\101\065\075\066\074\067\071\070\070\071\067\072\066" +
    "\073\076\074\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\043\121\056\116\060\u0100\061\104\062" +
    "\103\063\102\064\101\065\075\066\074\067\071\070\070" +
    "\071\067\072\066\073\076\074\073\001\001\000\002\001" +
    "\001\000\004\024\u0101\001\001\000\004\027\u0102\001\001" +
    "\000\002\001\001\000\004\024\u0104\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\043\121\056\116\060\u0107" +
    "\061\104\062\103\063\102\064\101\065\075\066\074\067" +
    "\071\070\070\071\067\072\066\073\076\074\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\043\121\056\116" +
    "\072\u010d\073\076\074\073\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\100\012\371\013\374" +
    "\014\011\015\365\021\u0111\022\361\023\372\024\362\026" +
    "\364\030\357\031\377\032\375\033\350\034\347\035\354" +
    "\036\356\043\121\056\116\060\366\061\104\062\103\063" +
    "\102\064\101\065\075\066\074\067\071\070\070\071\067" +
    "\072\066\073\076\074\073\001\001\000\004\120\u0112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\044\037\u011b\040\u011a\043\121\056\116\060\u0119\061\104" +
    "\062\103\063\102\064\101\065\075\066\074\067\071\070" +
    "\070\071\067\072\066\073\076\074\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\042\040\u011f\043\121\056\116\060\u0119\061\104" +
    "\062\103\063\102\064\101\065\075\066\074\067\071\070" +
    "\070\071\067\072\066\073\076\074\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\u0121\001\001\000" +
    "\002\001\001\000\012\050\326\051\065\052\061\103\u012d" +
    "\001\001\000\002\001\001\000\012\075\025\076\026\077" +
    "\037\102\u0125\001\001\000\002\001\001\000\004\115\u0127" +
    "\001\001\000\002\001\001\000\020\057\047\075\025\076" +
    "\026\077\027\100\045\107\u0129\110\046\001\001\000\002" +
    "\001\001\000\004\116\u012b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 2;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return new Symbol (sym.EOF); 
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // QualIdent ::= T_ID_U 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                       RESULT = ((MyParser) parser).DoQualIdent (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*QualIdent*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Designator3 ::= T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Designator3 ::= T_COLONCOLON T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Designator3 ::= T_NULLPTR 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("nullptr");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Designator3 ::= T_FALSE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("false");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Designator3 ::= T_TRUE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("true");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Designator3 ::= T_STR_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Designator3 ::= T_CHAR_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Designator3 ::= T_FLOAT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Designator3 ::= T_INT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Designator3 ::= T_LPAREN Expr T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Designator2 ::= Designator3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Designator2 ::= Designator2 T_LPAREN OptExprList T_RPAREN 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        ((MyParser) parser).DoFuncCall (_1);
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Designator2 ::= Designator2 IncDecOp 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Designator2 ::= Designator2 T_ARROW T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Designator2 ::= Designator2 T_LBRACKET Expr T_RBRACKET 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Array (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Designator2 ::= Designator2 T_DOT T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Dot (_1, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Designator ::= Designator2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Designator ::= IncDecOp Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Designator ::= T_LPAREN Type T_RPAREN Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Designator ::= T_SIZEOF T_LPAREN Type T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			RESULT = new ConstSTO("sizeof type - fix me");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Designator ::= T_SIZEOF T_LPAREN Designator T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			RESULT = new ConstSTO("sizeof variable - fix me");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Designator ::= T_NOT Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Designator ::= UnarySign Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Designator ::= T_AMPERSAND Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Designator ::= T_STAR Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // IncDecOp ::= T_MINUSMINUS 
            {
              String RESULT = null;
		
                        RESULT = "--";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(44/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // IncDecOp ::= T_PLUSPLUS 
            {
              String RESULT = null;
		
                        RESULT = "++";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(44/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // MulOp ::= T_MOD 
            {
              String RESULT = null;
		
                        RESULT = "%";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(43/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // MulOp ::= T_SLASH 
            {
              String RESULT = null;
		
                        RESULT = "/";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(43/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // MulOp ::= T_STAR 
            {
              String RESULT = null;
		
                        RESULT = "*";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(43/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // AddOp ::= T_MINUS 
            {
              String RESULT = null;
		
                        RESULT = "-";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(42/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // AddOp ::= T_PLUS 
            {
              String RESULT = null;
		
                        RESULT = "+";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(42/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Relation ::= T_GTE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Relation ::= T_LTE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Relation ::= T_GT 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Relation ::= T_LT 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Equality ::= T_NEQ 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(34/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Equality ::= T_EQU 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(34/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Expr8 ::= Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(55/*Expr8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Expr8 ::= Expr8 MulOp Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(55/*Expr8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Expr7 ::= Expr8 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*Expr7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Expr7 ::= Expr7 AddOp Expr8 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*Expr7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Expr6 ::= Expr7 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(53/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Expr6 ::= Expr6 Relation Expr7 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(53/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Expr5 ::= Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(52/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Expr5 ::= Expr5 Equality Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(52/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Expr4 ::= Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(51/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Expr4 ::= Expr4 T_AMPERSAND Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(51/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Expr3 ::= Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(50/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Expr3 ::= Expr3 T_CARET Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(50/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Expr2 ::= Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(49/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Expr2 ::= Expr2 T_BAR Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(49/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Expr1 ::= Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(48/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Expr1 ::= Expr1 T_AND Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(48/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Expr0 ::= Expr1 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(47/*Expr0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Expr0 ::= Expr0 T_OR Expr1 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(47/*Expr0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Expr ::= Expr0 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(46/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Expr ::= Designator T_ASSIGN Expr 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        ((MyParser) parser).DoAssignExpr (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(46/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ExprList ::= ExprList T_COMMA Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(32/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ExprList ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(32/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // OptExprList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // OptExprList ::= ExprList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ConstExpr ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*ConstExpr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // WritePair ::= T_ENDL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // WritePair ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // WritePairList ::= WritePairList T_OSTREAM WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // WritePairList ::= WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // WriteStmt ::= T_COUT T_OSTREAM WritePairList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*WriteStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ReadStmt ::= T_CIN T_ISTREAM Designator T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*ReadStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ReturnStmt ::= T_RETURN Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ReturnStmt ::= T_RETURN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ExitStmt ::= T_EXIT T_LPAREN Expr T_RPAREN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*ExitStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ContinueStmt ::= T_CONTINUE T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*ContinueStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // BreakStmt ::= T_BREAK T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*BreakStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // WhileStmt ::= T_WHILE Expr CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*WhileStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // OptElse ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(21/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // OptElse ::= T_ELSE CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(21/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // IfStmt ::= T_IF Expr CodeBlock OptElse 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*IfStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ArrElemsList ::= ArrElemsList T_COMMA Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*ArrElemsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ArrElemsList ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*ArrElemsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // OptInit ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // OptInit ::= T_ASSIGN T_LBRACE ArrElemsList T_RBRACE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // OptInit ::= T_ASSIGN Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // IdListWInit ::= IdListWInit T_COMMA OptModifiers T_ID T_ASSIGN ConstExpr 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = _1;
			RESULT.addElement (_3);
		    
              CUP$parser$result = new java_cup.runtime.Symbol(68/*IdListWInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // IdListWInit ::= OptModifiers T_ID T_ASSIGN ConstExpr 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			RESULT = new Vector ();
			RESULT.addElement (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(68/*IdListWInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // IdListWOptInit ::= IdListWOptInit T_COMMA OptModifiers T_ID OptInit 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _1;
                        RESULT.addElement (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*IdListWOptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // IdListWOptInit ::= OptModifiers T_ID OptInit 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = new Vector ();
                        RESULT.addElement (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*IdListWOptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // IdListUpper ::= IdListUpper T_COMMA T_ID_U 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                        RESULT.addElement (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(66/*IdListUpper*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // IdListUpper ::= T_ID_U 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new Vector ();
                        RESULT.addElement (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(66/*IdListUpper*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // IdList ::= IdList T_COMMA OptModifiers T_ID 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                        RESULT.addElement (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(65/*IdList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // IdList ::= OptModifiers T_ID 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new Vector ();
                        RESULT.addElement (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(65/*IdList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // OptRef ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(12/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // OptRef ::= T_AMPERSAND 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(12/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ParamDecl ::= Type OptRef T_ID 
            {
              String RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(45/*ParamDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ParamList ::= ParamList T_COMMA ParamDecl 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(70/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ParamList ::= ParamDecl 
            {
              Vector RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(70/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // OptParamList ::= 
            {
              Vector RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(69/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // OptParamList ::= ParamList 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(69/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Stmt ::= WriteStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Stmt ::= ReadStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Stmt ::= ReturnStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Stmt ::= ExitStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Stmt ::= ContinueStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Stmt ::= BreakStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Stmt ::= WhileStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Stmt ::= IfStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Stmt ::= Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Stmt ::= CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Stmt ::= TypedefDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Stmt ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Stmt ::= VarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // StmtList ::= StmtList Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // StmtList ::= Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // OptStmtList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // OptStmtList ::= StmtList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CodeBlock ::= T_LBRACE NT$6 OptStmtList NT$7 T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*CodeBlock*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$7 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockClose(); 
              CUP$parser$result = new java_cup.runtime.Symbol(78/*NT$7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // NT$6 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockOpen(); 
              CUP$parser$result = new java_cup.runtime.Symbol(77/*NT$6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ReturnType ::= T_VOID 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(64/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ReturnType ::= SubType OptPointerList 
            {
              Type RESULT = null;
		
                        // You should determine the type and return it here
                        RESULT = null;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Pointer ::= T_STAR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(40/*Pointer*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // PointerList ::= PointerList Pointer 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // PointerList ::= Pointer 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OptPointerList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OptPointerList ::= PointerList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // OptModifiers ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*OptModifiers*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OptModifiers ::= T_LBRACKET ConstExpr T_RBRACKET 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*OptModifiers*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OptModifiers ::= PointerList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*OptModifiers*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // BasicType ::= T_CHAR 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // BasicType ::= T_BOOL 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // BasicType ::= T_FLOAT 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // BasicType ::= T_INT 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // SubType ::= BasicType 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(61/*SubType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // SubType ::= QualIdent 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(61/*SubType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // UndecoratedType ::= T_FUNCPTR T_COLON ReturnType OptRef T_LPAREN OptParamList T_RPAREN 
            {
              Type RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(63/*UndecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // UndecoratedType ::= SubType 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(63/*UndecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Type ::= T_FUNCPTR T_COLON ReturnType OptRef T_LPAREN OptParamList T_RPAREN 
            {
              Type RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(62/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Type ::= SubType OptModifiers 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(62/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // FuncDecl ::= T_EXTERN T_FUNCTION T_COLON ReturnType T_ID NT$4 T_LPAREN OptParamList T_RPAREN NT$5 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(6/*FuncDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$5 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(76/*NT$5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$4 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoFuncDecl_1(_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(75/*NT$4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // FuncDef ::= T_FUNCTION T_COLON ReturnType OptRef T_ID NT$2 T_LPAREN OptParamList T_RPAREN NT$3 T_LBRACE OptStmtList T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(5/*FuncDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$3 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(74/*NT$3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$2 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1(_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(73/*NT$2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // FieldList ::= UndecoratedType IdList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(14/*FieldList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // FieldsList ::= FieldsList FieldList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*FieldsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // FieldsList ::= FieldList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*FieldsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // TypedefDecl ::= T_STRUCTDEF T_ID_U T_LBRACE NT$1 FieldsList T_RBRACE T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                         ((MyParser) parser).DoBlockClose();
                         ((MyParser) parser).DoStructdefDecl (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*TypedefDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$1 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoBlockOpen();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(72/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TypedefDecl ::= T_TYPEDEF Type IdListUpper T_SEMI 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _2 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        ((MyParser) parser).DoTypedefDecl (_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*TypedefDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // OptStatic ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // OptStatic ::= T_STATIC 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ConstDecl ::= OptStatic T_CONST T_AUTO T_ID T_ASSIGN Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ConstDecl ::= OptStatic T_CONST UndecoratedType IdListWInit T_SEMI 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        ((MyParser) parser).DoConstDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(9/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VarDecl ::= OptStatic T_AUTO T_ID T_ASSIGN Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // VarDecl ::= OptStatic UndecoratedType IdListWOptInit T_SEMI 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                         ((MyParser) parser).DoVarDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ExternDecl ::= T_EXTERN UndecoratedType IdList T_SEMI 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _3 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                         ((MyParser) parser).DoExternDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(7/*ExternDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // GlobalDecl ::= FuncDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // GlobalDecl ::= FuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // GlobalDecl ::= TypedefDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // GlobalDecl ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // GlobalDecl ::= VarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // GlobalDecl ::= ExternDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // GlobalDecls ::= GlobalDecls GlobalDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // GlobalDecls ::= GlobalDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OptGlobalDecls ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OptGlobalDecls ::= GlobalDecls 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= NT$0 OptGlobalDecls 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                         ((MyParser) parser).DoProgramEnd();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // NT$0 ::= 
            {
              Object RESULT = null;

                         ((MyParser) parser).DoProgramStart(); 
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

